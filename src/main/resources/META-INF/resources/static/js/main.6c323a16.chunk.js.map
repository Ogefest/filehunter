{"version":3,"sources":["SystemTaskStatus.js","Navbar.js","SearchResultRow.js","EmptySearchResult.js","SearchAdvanced.js","Searchform.js","ReindexState.js","EmptyIndexList.js","IndexInfo.js","IndexForm.js","App.js","reportWebVitals.js","index.js"],"names":["SystemTaskStatus","props","refreshInterval","refreshStatus","bind","this","fetch","process","then","res","json","result","setTimeout","setState","undefined","currentTask","class","React","Component","Navbar","href","type","id","rel","target","SearchResultRow","getColorByName","str","hash","i","length","charCodeAt","colour","toString","substr","iconclass","params","indexname","uuid","name","path","EmptySearchResult","align","SearchAdvanced","indexList","indexName","extension","requestFinished","e","value","handleAddFilters","advQ","update","for","onChange","handleIndexNameChange","map","item","handleExtensionChange","SearchForm","state","searchResultRows","sr","lastQuery","currentQuery","advancedFilterQuery","activeQuery","searchTimeout","updateAdvancedFilterQuery","clearInterval","intervalId","s","trim","substring","handleSearch","combinedQuery","encodeURIComponent","push","clearTimeout","autoFocus","placeholder","handleInputChange","onClick","ReindexState","console","log","clicked","handleClick","indextype","method","headers","response","title","EmptyIndexList","IndexInfo","handleRemove","refreshList","row","window","confirm","directoryRow","pathRow","ignorePath","ignorePhrase","ignoreExtension","Date","lastStructureIndexed","toLocaleDateString","toLocaleTimeString","IndexForm","formData","handleSubmit","handleFormEdit","match","event","preventDefault","body","JSON","stringify","location","replace","split","intervalUpdateStructure","extractMetadata","checked","formEditing","onSubmit","join","withRouter","App","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA4CeA,E,kDAxCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,gBAAkB,IACvB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBAJN,E,qDAOnB,WACIC,KAAKF,kB,2BAGT,WAAiB,IAAD,OACZG,MAAM,GAAD,OAfGC,GAeH,mBACAC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKA,OAASA,EAEdC,WAAW,EAAKT,cAAe,EAAKD,iBACpC,EAAKW,SAAS,S,oBAI1B,WAEI,YAAoBC,IAAhBT,KAAKM,OACE,GAEqB,KAA5BN,KAAKM,OAAOI,aAGZV,KAAKH,gBAAkB,IAChB,KAHPG,KAAKH,gBAAkB,IAOvB,uBAAMc,MAAM,mBAAZ,kBAAqCX,KAAKM,OAAOI,oB,GApC9BE,IAAMC,WCiDtBC,E,4JA/Cb,WACE,OACE,qBAAKH,MAAM,uCAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,sBAAMA,MAAM,mBAAZ,gBADF,IAC2C,mBAAGA,MAAM,eAAeI,KAAK,IAA7B,wBACzC,wBAAQJ,MAAM,iBAAiBK,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAxL,SACE,sBAAML,MAAM,0BAEd,sBAAKA,MAAM,2BAA2BM,GAAG,yBAAzC,UACE,qBAAIN,MAAM,kCAAV,UACE,oBAAIA,MAAM,WAAV,SACE,oBAAGA,MAAM,WAAW,eAAa,OAAOI,KAAK,IAA7C,UAAiD,mBAAGJ,MAAM,iBAA1D,eAEF,oBAAIA,MAAM,WAAV,SACE,oBAAGI,KAAK,aAAaJ,MAAM,gCAA3B,UAA2D,mBAAGA,MAAM,uBAApE,gBAEF,oBAAIA,MAAM,WAAV,SACE,oBAAGO,IAAI,aAAaH,KAAI,UApBxBb,GAoBwB,YAAwBiB,OAAO,SAASR,MAAM,qBAAtE,UAA2F,mBAAGA,MAAM,qBAApG,gBAEF,oBAAIA,MAAM,WAAV,SACE,oBAAGO,IAAI,aAAaH,KAAK,wCAAwCI,OAAO,SAASR,MAAM,sBAAvF,UAA6G,mBAAGA,MAAM,iBAAtH,kBAkBJ,cAAC,EAAD,gB,GAvCSC,IAAMC,WC+CZO,E,kDA7CX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IAEDyB,eAAiB,EAAKA,eAAetB,KAApB,gBAHP,E,kDAMnB,SAAeuB,GAEX,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,EAAOD,EAAII,WAAWF,KAAOD,GAAQ,GAAKA,GAE5C,IAAII,EAAS,IACb,IAASH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1BG,IAAW,MADEJ,GAAa,EAAJC,EAAU,KACRI,SAAS,KAAKC,QAAQ,GAEhD,OAAOF,I,oBAGX,WACI,IAAIG,EAAY,kBACe,MAA3B9B,KAAKJ,MAAMmC,OAAOf,OAClBc,EAAY,cAGC9B,KAAKqB,eAAerB,KAAKJ,MAAMmC,OAAOC,WAEvD,OACI,sBAAKrB,MAAM,WAAX,UAIQ,+BACA,mBAAGA,MAAK,aAAQmB,KADhB,IACkC,mBAAGZ,IAAI,aAAaC,OAAO,SAASJ,KAAI,UAtC9Eb,GAsC8E,qBAAyBF,KAAKJ,MAAMmC,OAAOE,MAAnF,SAA4FjC,KAAKJ,MAAMmC,OAAOG,UAIhJ,uBAAOvB,MAAM,eAAb,SAA6BX,KAAKJ,MAAMmC,OAAOI,SAT5BnC,KAAKJ,MAAMmC,OAAOE,U,GA9B3BrB,IAAMC,WCmBrBuB,E,4JAnBX,WACI,OACI,qBAAKzB,MAAM,YAAX,SACI,qBAAKA,MAAM,MAAX,SACI,qBAAKA,MAAM,iBAAX,SAGI,qBAAKA,MAAM,8CAA8C0B,MAAM,SAA/D,qCAJa,uB,GALLzB,IAAMC,WC8EvByB,E,kDA3EX,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IACD2C,UAAY,GACjB,EAAKC,UAAY,GACjB,EAAKC,UAAY,GAJF,E,qDASnB,WAAqB,IAAD,OAChBxC,MAAM,GAAD,OAdGC,GAcH,gBACAC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKiC,UAAYjC,EACjB,EAAKoC,iBAAkB,EACvB,EAAKlC,SAAS,S,mCAI1B,SAAsBmC,GAClB3C,KAAKwC,UAAYG,EAAExB,OAAOyB,MAC1B5C,KAAK6C,qB,mCAGT,SAAsBF,GAClB3C,KAAKyC,UAAYE,EAAExB,OAAOyB,MAC1B5C,KAAK6C,qB,8BAGT,WAEI,IAAIC,EAAO,GACY,KAAnB9C,KAAKwC,YACLM,GAAQ,kBAAoB9C,KAAKwC,UAAY,KAE1B,KAAnBxC,KAAKyC,YACLK,GAAQ,YAAc9C,KAAKyC,UAAY,KAG3CzC,KAAKJ,MAAMmD,OAAOD,K,oBAItB,WACI,OACI,8BACI,sBAAKnC,MAAM,MAAMM,GAAG,GAApB,UAEI,qBAAKN,MAAM,QAAX,SACI,sBAAKA,MAAM,kCAAX,UACI,uBAAOA,MAAM,mBAAmBqC,IAAI,kBAApC,mBACA,yBAAQC,SAAUjD,KAAKkD,sBAAsBnD,KAAKC,MAAOiB,GAAG,kBAAkBN,MAAM,6BAA6B,aAAW,aAA5H,UACI,2BACCX,KAAKuC,UAAUY,KAAI,SAAAC,GAAI,OACpB,wBAAQR,MAAOQ,EAAKlB,KAApB,SAA2BkB,EAAKlB,kBAMhD,qBAAKvB,MAAM,QAAX,SACI,sBAAKA,MAAM,kCAAX,UACI,uBAAOA,MAAM,mBAAmBqC,IAAI,iBAApC,uBACA,uBAAOC,SAAUjD,KAAKqD,sBAAsBtD,KAAKC,MAAOgB,KAAK,OAAOL,MAAM,eAAe,aAAW,YAAY,mBAAiB,4B,GAjEhIC,IAAMC,WC8GpByC,E,kDAxGX,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IACD2D,MAAQ,CACTX,MAAO,KACPY,iBAAkB,IAEtB,EAAKC,GAAK,GACV,EAAKC,UAAY,GACjB,EAAKC,aAAe,GACpB,EAAKC,oBAAsB,GAC3B,EAAKC,aAAc,EACnB,EAAKC,cAAgB,KAErB,EAAKC,0BAA4B,EAAKA,0BAA0BhE,KAA/B,gBAblB,E,qDAiBnB,c,kCAGA,WACIiE,cAAchE,KAAKiE,c,uCAGvB,SAA0BC,GACtBlE,KAAK4D,oBAAsBM,EAEF,IAArBlE,KAAK2D,eACL3D,KAAK4D,oBAAsB5D,KAAK4D,oBAAoBO,OAAOC,UAAU,IAGzEpE,KAAKqE,iB,0BAGT,WAAgB,IAAD,OAEPC,EAAgBtE,KAAK2D,aAAe,IAAM3D,KAAK4D,oBAG7B,KAAlBU,GAAwBA,IAAkBtE,KAAK0D,YAG1B,IAArB1D,KAAK6D,cAGT7D,KAAK6D,aAAc,EAEnB5D,MAAM,GAAD,OApDGC,GAoDH,qBAAwBqE,mBAAmBD,KAC3CnE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKoD,UAAYY,EACjB,EAAKT,aAAc,EAEnB,EAAKJ,GAAK,GACVnD,EAAO6C,KAAI,SAACC,GAAD,OACP,EAAKK,GAAGe,KAAK,cAAC,EAAD,CAAiBzC,OAAQqB,QAEnB,IAAnB,EAAKK,GAAGhC,QACR,EAAKgC,GAAGe,KAAK,cAAC,EAAD,KAGjB,EAAKhE,SAAS,CAAEgD,iBAAkB,EAAKC,W,+BAInD,SAAkBd,GACd3C,KAAK2D,aAAehB,EAAExB,OAAOyB,MACH,MAAtB5C,KAAK8D,eACLW,aAAazE,KAAK8D,eAEtB9D,KAAK8D,cAAgBvD,WAAWP,KAAKqE,aAAatE,KAAKC,MAAO,O,oBAGlE,WACI,OACI,sBAAKW,MAAM,iBAAX,UACI,qBAAKA,MAAM,MAAX,SACI,qBAAKA,MAAM,iBAAX,SACI,sBAAKA,MAAM,mBAAX,UACI,uBAAO+D,WAAS,EAAC1D,KAAK,OAAOL,MAAM,eAAegE,YAAY,mBAAmB,aAAW,mBAAmB,mBAAiB,gBAAgB1B,SAAUjD,KAAK4E,kBAAkB7E,KAAKC,QACtL,wBAAQW,MAAM,kBAAkBK,KAAK,SAAS6D,QAAS7E,KAAKqE,aAAatE,KAAKC,MAA9E,SAAqF,mBAAGW,MAAM,mBAC9F,wBAAQA,MAAM,4BAA4BK,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAjG,SAAgH,mBAAGL,MAAM,0BAKrI,qBAAKA,MAAM,oBAAoBM,GAAG,cAAlC,SACI,qBAAKN,MAAM,iBAAX,SACI,cAAC,EAAD,CAAgBoC,OAAQ/C,KAAK+D,gCAIrC,qBAAKpD,MAAM,MAAX,SACI,qBAAKA,MAAM,iBAAX,SACKX,KAAKuD,MAAMC,4B,GAhGX5C,IAAMC,WCmChBiE,E,kDApCX,WAAYlF,GAAQ,IAAD,6BACf,cAAMA,GACNmF,QAAQC,IAAIpF,GAEZ,EAAK2D,MAAQ,CAAE0B,SAAS,GAExB,EAAKC,YAAc,EAAKA,YAAYnF,KAAjB,gBANJ,E,+CASnB,WAAe,IAAD,OAEV,IAA2B,IAAvBC,KAAKuD,MAAM0B,QAYf,OARAhF,MAAM,GAAD,OApBGC,GAoBH,0BAA6BF,KAAKJ,MAAMuF,WAAa,CACtDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,sBAE1BlF,MAAK,SAAAmF,GACF,EAAK9E,SAAS,CAAEyE,SAAS,QAG1B,I,oBAGX,WAGI,OACI,wBAAQ,iBAAe,MAAMM,MAAM,UAAU5E,MAAM,yBAAyBI,KAAK,IAAI8D,QAAS7E,KAAKkF,YAAnG,SAAgH,mBAAGvE,MAAM,6B,GAjC1GC,IAAMC,WC0BlB2E,E,4JAzBX,WACI,OACI,qBAAK7E,MAAM,iBAAX,SAGI,qBAAKA,MAAM,MAAX,SACI,sBAAKA,MAAM,iBAAX,UAGI,qBAAKA,MAAM,8CAA8C0B,MAAM,SAA/D,mFAIA,qBAAKA,MAAM,SAAX,SACA,oBAAGtB,KAAK,oBAAoBJ,MAAM,yBAAlC,UAA2D,mBAAGA,MAAM,eAApE,6BATa,uB,GAPRC,IAAMC,WCyHpB4E,E,kDAlHX,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IAEDU,OAAS,GACd,EAAKoC,iBAAkB,EAEvB,EAAKgD,aAAe,EAAKA,aAAa3F,KAAlB,gBANL,E,qDAUnB,WACIC,KAAK2F,gB,yBAIT,WAAe,IAAD,OACV1F,MAAM,GAAD,OAtBGC,GAsBH,gBACAC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKA,OAASA,EACd,EAAKoC,iBAAkB,EACvB,EAAKlC,SAAS,S,0BAK1B,SAAaoF,GAAM,IAAD,OAad,OAZIC,OAAOC,QAAQ,kBAEf7F,MAAM,GAAD,OAnCDC,GAmCC,yBAA4B0F,EAAI1D,MAAQ,CACzCkD,OAAQ,SACRC,QAAS,CAAE,eAAgB,sBAE9BlF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKA,OAASA,EACd,EAAKE,SAAS,QAGf,I,oBAGX,WAAU,IAAD,OAEL,OAA6B,IAAzBR,KAAK0C,gBACE,GAGgB,IAAvB1C,KAAKM,OAAOmB,OAER,cAAC,EAAD,IAMJ,qBAAKd,MAAM,iBAAX,SACA,qBAAKA,MAAM,MAAX,SACI,sBAAKA,MAAM,kBAAX,UACI,kDAAoB,oBAAGI,KAAK,oBAAoBJ,MAAM,yBAAlC,UAA2D,mBAAGA,MAAM,eAApE,aACpB,wBAAOA,MAAM,QAAb,UACI,gCACI,+BACI,sCACA,uCACA,wCACA,8CACA,2CAGR,gCACKX,KAAKM,OAAO6C,KAAI,SAAA4C,GAAY,OACzB,+BACI,+BAAI,mBAAGpF,MAAM,uBAAb,IAAwCoF,EAAa7D,QACrD,6BACK6D,EAAa5D,KAAKgB,KAAI,SAAA6C,GAAO,OAC1B,uBAAOrF,MAAM,wBAAb,SAAsCqF,SAG9C,+BACCD,EAAaE,WAAW9C,KAAI,SAAA6C,GAAO,OAC5B,uBAAOrF,MAAM,0BAAb,SAAwCqF,OAE/CD,EAAaG,aAAa/C,KAAI,SAAA6C,GAAO,OAC9B,wBAAOrF,MAAM,0BAAb,cAAyCqF,EAAzC,UAEPD,EAAaI,gBAAgBhD,KAAI,SAAA6C,GAAO,OACjC,wBAAOrF,MAAM,0BAAb,eAA0CqF,WAGlD,+BACK,IAAII,KAAKL,EAAaM,sBAAsBC,qBADjD,OAGK,IAAIF,KAAKL,EAAaM,sBAAsBE,wBAGjD,+BACI,mBAAG,iBAAe,MAAMhB,MAAM,OAAOxE,KAAI,0BAAqBgF,EAAa7D,MAAQvB,MAAM,4BAAzF,SAAqH,mBAAGA,MAAM,mBAC9H,mBAAG,iBAAe,MAAM4E,MAAM,SAASV,QAAS,kBAAM,EAAKa,aAAaK,IAAehF,KAAK,IAAIJ,MAAM,6BAAtG,SAAmI,mBAAGA,MAAM,kBAC5I,cAAC,EAAD,CAAcwE,UAAWY,EAAa7D,gC,GAvGtDtB,IAAMC,WCAxB2F,E,kDACF,WAAY5G,GAAQ,IAAD,8BACf,cAAMA,IAED2D,MAAQ,CACTkD,SAAU,CACN,iBAAmB,EACnB,gBAAmB,GACnB,WAAc,GACd,aAAgB,GAChB,UAAa,OACb,uBAA0B,KAC1B,KAAQ,GACR,KAAQ,KAIhB,EAAKC,aAAe,EAAKA,aAAa3G,KAAlB,gBACpB,EAAK4G,eAAiB,EAAKA,eAAe5G,KAApB,gBAjBP,E,qDAoBnB,WAAqB,IAAD,OACZkB,EAAKjB,KAAKJ,MAAMgH,MAAM7E,OAAOG,UACtBzB,IAAPQ,GACAhB,MAAM,GAAD,OA3BDC,GA2BC,sBAAyBe,IACzBd,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKE,SAAS,CAAEiG,SAAUnG,S,0BAM1C,SAAauG,GAETA,EAAMC,iBAEN7G,MAAM,GAAD,OAxCGC,GAwCH,cAAyB,CAC1BkF,OAAQ,OACR2B,KAAMC,KAAKC,UAAUjH,KAAKuD,MAAMkD,UAChCpB,QAAS,CAAE,eAAgB,sBAE1BlF,MAAK,SAAAmF,GACFP,QAAQC,IAAIM,GACZO,OAAOqB,SAAW,kB,4BAI9B,SAAeL,GAEX,GAAmB,WAAfA,EAAM7F,KAAV,CAIA,IAAIyF,EAAWzG,KAAKuD,MAAMkD,SAE1B,OAAQI,EAAM1F,OAAOF,IACjB,IAAK,YACDwF,EAASvE,KAAO2E,EAAM1F,OAAOyB,MAAMuE,QAAQ,iBAAkB,IAC7D,MACJ,IAAK,YACDV,EAAStE,KAAO0E,EAAM1F,OAAOyB,MAAMwE,MAAM,KACzC,MACJ,IAAK,kBACDX,EAASR,WAAaY,EAAM1F,OAAOyB,MAAMwE,MAAM,KAC/C,MACJ,IAAK,oBACDX,EAASP,aAAeW,EAAM1F,OAAOyB,MAAMwE,MAAM,KACjD,MACJ,IAAK,iBACDX,EAASN,gBAAkBU,EAAM1F,OAAOyB,MAAMwE,MAAM,KACpD,MACJ,IAAK,uBACDX,EAASY,wBAA0BR,EAAM1F,OAAOyB,MAAMuE,QAAQ,YAAa,IAC3E,MACJ,IAAK,uBACDV,EAASa,gBAAkBT,EAAM1F,OAAOoG,QAIhDvH,KAAKQ,SAAS,CAAEiG,SAAUA,O,oBAG9B,WACI,IACIe,GAAc,EAKlB,YAJW/G,IAFFT,KAAKJ,MAAMgH,MAAM7E,OAAOG,OAG7BsF,GAAc,GAId,qBAAK7G,MAAM,iBAAX,SACI,qBAAKA,MAAM,MAAX,SACI,sBAAKA,MAAM,kBAAX,UACI,+BAAK6G,EAAc,OAAS,SAA5B,YACA,uBAAMC,SAAUzH,KAAK0G,aAArB,UACI,sBAAK/F,MAAM,WAAX,UACI,uBAAOqC,IAAI,YAAYrC,MAAM,0BAA7B,wBACA,qBAAKA,MAAM,WAAX,SACI,uBAAOiC,MAAO5C,KAAKuD,MAAMkD,SAASvE,KAAMe,SAAUjD,KAAK2G,eAAgB3F,KAAK,OAAOL,MAAM,eAAeM,GAAG,gBAE/G,qBAAKN,MAAM,gBAKf,sBAAKA,MAAM,WAAX,UACI,uBAAOqC,IAAI,YAAYrC,MAAM,0BAA7B,2BACA,qBAAKA,MAAM,WAAX,SACI,uBAAOiC,MAAO5C,KAAKuD,MAAMkD,SAAStE,KAAKuF,KAAK,KAAMzE,SAAUjD,KAAK2G,eAAgB3F,KAAK,OAAOL,MAAM,eAAeM,GAAG,gBAEzH,qBAAKN,MAAM,WAAX,SACI,wBAAOA,MAAM,aAAb,yFAAsG,uBAAtG,gDAIR,iDAEA,sBAAKA,MAAM,WAAX,UACI,uBAAOqC,IAAI,kBAAkBrC,MAAM,0BAAnC,yBACA,qBAAKA,MAAM,WAAX,SACI,uBAAOiC,MAAO5C,KAAKuD,MAAMkD,SAASR,WAAWyB,KAAK,KAAMzE,SAAUjD,KAAK2G,eAAgB3F,KAAK,OAAOL,MAAM,eAAeM,GAAG,sBAE/H,qBAAKN,MAAM,WAAX,SACI,wBAAOA,MAAM,aAAb,0DAAuE,uBAAvE,4EAIR,sBAAKA,MAAM,WAAX,UACI,uBAAOqC,IAAI,oBAAoBrC,MAAM,0BAArC,2BACA,qBAAKA,MAAM,WAAX,SACI,uBAAOiC,MAAO5C,KAAKuD,MAAMkD,SAASP,aAAawB,KAAK,KAAMzE,SAAUjD,KAAK2G,eAAgB3F,KAAK,OAAOL,MAAM,eAAeM,GAAG,wBAEjI,qBAAKN,MAAM,WAAX,SACI,wBAAOA,MAAM,aAAb,sHAAmI,uBAAnI,kCAIR,sBAAKA,MAAM,WAAX,UACI,uBAAOqC,IAAI,iBAAiBrC,MAAM,0BAAlC,+BACA,qBAAKA,MAAM,WAAX,SACI,uBAAOiC,MAAO5C,KAAKuD,MAAMkD,SAASN,gBAAgBuB,KAAK,KAAMzE,SAAUjD,KAAK2G,eAAgB3F,KAAK,OAAOL,MAAM,eAAeM,GAAG,qBAEpI,qBAAKN,MAAM,WAAX,SACI,wBAAOA,MAAM,aAAb,sDAAmE,uBAAnE,4BAKR,kDAEA,sBAAKA,MAAM,WAAX,UACI,uBAAOqC,IAAI,uBAAuBrC,MAAM,0BAAxC,qCACA,qBAAKA,MAAM,WAAX,SACI,uBAAOiC,MAAO5C,KAAKuD,MAAMkD,SAASY,wBAAyBpE,SAAUjD,KAAK2G,eAAgB3F,KAAK,OAAOL,MAAM,eAAeM,GAAG,2BAElI,qBAAKN,MAAM,WAAX,SACI,uBAAOA,MAAM,aAAb,mEAIR,sBAAKA,MAAM,WAAX,UACI,uBAAOqC,IAAI,uBAAuBrC,MAAM,0BAAxC,yCACA,qBAAKA,MAAM,WAAX,SACI,uBAAOsC,SAAUjD,KAAK2G,eAAgBY,QAASvH,KAAKuD,MAAMkD,SAASa,gBAAiBtG,KAAK,WAAWL,MAAM,mBAAmBM,GAAG,2BAEpI,qBAAKN,MAAM,WAAX,SACI,uBAAOA,MAAM,aAAb,uHAIR,qBAAKA,MAAM,MAAX,SACI,sBAAKA,MAAM,iBAAX,UACI,mBAAGI,KAAK,aAAaJ,MAAM,eAA3B,oBACA,wBAAQK,KAAK,SAASL,MAAM,8BAA5B,qC,GA9KZC,IAAMC,WA2Lf8G,cAAWnB,GCvJXoB,MAjCf,WACE,OACE,gCACE,iCACE,cAAC,EAAD,MAEF,sBAAMjH,MAAM,gBAAZ,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkH,OAAK,EAAC1F,KAAK,IAAlB,SACE,cAAC,IAAD,CAAU2F,GAAG,YAEf,cAAC,IAAD,CAAOD,OAAK,EAAC1F,KAAK,QAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAO0F,OAAK,EAAC1F,KAAK,aAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,wBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,EAAD,iBClBC4F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9H,MAAK,YAAkD,IAA/C+H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6c323a16.chunk.js","sourcesContent":["import React from 'react';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass SystemTaskStatus extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.refreshInterval = 10000\n        this.refreshStatus = this.refreshStatus.bind(this)\n    }   \n    \n    componentDidMount() {\n        this.refreshStatus()\n    }\n\n    refreshStatus() {\n        fetch(`${API_URL}/system/status`)\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n\n                setTimeout(this.refreshStatus, this.refreshInterval)\n                this.setState({});\n            });\n    }\n\n    render() {\n\n        if (this.result === undefined) {\n            return(\"\")\n        }\n        if (this.result.currentTask !== \"\") {\n            this.refreshInterval = 1000\n        } else {\n            this.refreshInterval = 10000\n            return(\"\")\n        }\n\n        return(\n            <span class=\"badge bg-success\">Task {this.result.currentTask}</span>\n        )\n    }\n}\n\nexport default SystemTaskStatus","import React from 'react';\nimport SystemTaskStatus from './SystemTaskStatus';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-light\" >\n        <div class=\"container-fluid\">\n          <span class=\"badge bg-primary\">FH</span> <a class=\"navbar-brand\" href=\"/\">Filehunter</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav ms-auto mb-1 mb-lg-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" aria-current=\"page\" href=\"/\"><i class=\"bi bi-search\"></i> Search</a>\n              </li>\n              <li class=\"nav-item\">\n                <a href=\"/gui/index\" class=\"nav-link menu-item nav-active\"><i class=\"bi bi-folder2-open\"></i> Indexes</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href={`${API_URL}/api-doc`} target=\"_blank\" class=\"nav-link menu-item\"><i class=\"bi bi-code-slash\"></i> API Doc</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href=\"https://github.com/Ogefest/filehunter\" target=\"_blank\" class=\"nav-link  menu-item\"><i class=\"bi bi-github\"></i> Github</a>\n              </li>\n\n              {/* <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Dropdown\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                  <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                  <li><hr class=\"dropdown-divider\" /></li>\n                  <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                </ul>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Link</a>\n              </li> */}\n            </ul>\n            <SystemTaskStatus />\n          </div>\n        </div>\n      </nav>\n\n    )\n  }\n}\n\nexport default Navbar;","import React from 'react';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass SearchResultRow extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.getColorByName = this.getColorByName.bind(this)\n    }\n\n    getColorByName(str) {\n        var hash = 0;\n        for (var i = 0; i < str.length; i++) {\n          hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        var colour = '#';\n        for (var i = 0; i < 3; i++) {\n          var value = (hash >> (i * 8)) & 0xFF;\n          colour += ('00' + value.toString(16)).substr(-2);\n        }\n        return colour;\n      }    \n\n    render() {\n        let iconclass = \"bi-file-earmark\"\n        if (this.props.params.type === 'd') {\n            iconclass = \"bi-folder2\"\n        }\n\n        let badgeColor = this.getColorByName(this.props.params.indexname)\n\n        return (\n            <div class=\"row mb-3\" key={this.props.params.uuid}>\n                \n                    {/* <h5>{this.props.params.name}</h5> */}\n                    \n                    <h5>\n                    <i class={`bi ${iconclass}`}></i> <a rel=\"noreferrer\" target=\"_blank\" href={`${API_URL}/download/${this.props.params.uuid}`}>{this.props.params.name}</a>\n                    {/* <small class=\"badge\" style={{backgroundColor: badgeColor, fontSize: '10px'}}>{this.props.params.indexname}</small>  */}\n                    </h5>\n                    \n                    <small class=\"text-success\">{this.props.params.path}</small>\n                \n            </div>\n        )\n    }\n    \n}\n\nexport default SearchResultRow","import React from \"react\";\n\nclass EmptySearchResult extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col-8 offset-4\">\n\n\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            Empty search results\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptySearchResult","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass SearchAdvanced extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.indexList = []\n        this.indexName = \"\"\n        this.extension = \"\"\n\n\n    }\n\n    componentDidMount() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.indexList = result;\n                this.requestFinished = true\n                this.setState({});\n            });\n    }\n\n    handleIndexNameChange(e) {\n        this.indexName = e.target.value\n        this.handleAddFilters()\n    }\n\n    handleExtensionChange(e) {\n        this.extension = e.target.value\n        this.handleAddFilters()\n    }\n\n    handleAddFilters() {\n\n        let advQ = \"\"\n        if (this.indexName !== \"\") {\n            advQ += \" AND indexname:\" + this.indexName + \" \"\n        }\n        if (this.extension !== \"\") {\n            advQ += \" AND ext:\" + this.extension + \" \"\n        }\n\n        this.props.update(advQ)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div class=\"row\" id=\"\">\n\n                    <div class=\"col-3\">\n                        <div class=\"input-group input-group-sm mb-3\">\n                            <label class=\"input-group-text\" for=\"selectIndexname\">Index</label>\n                            <select onChange={this.handleIndexNameChange.bind(this)} id=\"selectIndexname\" class=\"form-select form-select-sm\" aria-label=\"Index name\">\n                                <option></option>\n                                {this.indexList.map(item =>\n                                    <option value={item.name}>{item.name}</option>\n                                )}\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"col-3\">\n                        <div class=\"input-group input-group-sm mb-3\">\n                            <label class=\"input-group-text\" for=\"inputExtension\">Extension</label>\n                            <input onChange={this.handleExtensionChange.bind(this)} type=\"text\" class=\"form-control\" aria-label=\"extension\" aria-describedby=\"extension\" />\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default SearchAdvanced","import React from 'react';\nimport SearchResultRow from './SearchResultRow.js'\nimport EmptySearchResult from './EmptySearchResult.js';\nimport SearchAdvanced from './SearchAdvanced.js';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass SearchForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            searchResultRows: []\n        };\n        this.sr = []\n        this.lastQuery = \"\"\n        this.currentQuery = \"\"\n        this.advancedFilterQuery = \"\"\n        this.activeQuery = false\n        this.searchTimeout = null\n\n        this.updateAdvancedFilterQuery = this.updateAdvancedFilterQuery.bind(this)\n\n    }\n\n    componentDidMount() {\n        //   this.intervalId = setInterval(this.handleSearch.bind(this), 500);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalId)\n    }\n\n    updateAdvancedFilterQuery(s) {\n        this.advancedFilterQuery = s\n\n        if (this.currentQuery == \"\") {\n            this.advancedFilterQuery = this.advancedFilterQuery.trim().substring(3)\n        }\n\n        this.handleSearch()\n    }\n\n    handleSearch() {\n\n        let combinedQuery = this.currentQuery + \" \" + this.advancedFilterQuery;\n\n\n        if (combinedQuery === \"\" || combinedQuery === this.lastQuery) {\n            return;\n        }\n        if (this.activeQuery === true) {\n            return;\n        }\n        this.activeQuery = true\n\n        fetch(`${API_URL}/search?q=${encodeURIComponent(combinedQuery)}`)\n            .then(res => res.json())\n            .then((result) => {\n                this.lastQuery = combinedQuery\n                this.activeQuery = false;\n\n                this.sr = []\n                result.map((item) => (\n                    this.sr.push(<SearchResultRow params={item} />)\n                ))\n                if (this.sr.length === 0) {\n                    this.sr.push(<EmptySearchResult />)\n                }\n\n                this.setState({ searchResultRows: this.sr })\n            })\n    }\n\n    handleInputChange(e) {\n        this.currentQuery = e.target.value\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout)\n        }\n        this.searchTimeout = setTimeout(this.handleSearch.bind(this), 300);\n    }\n\n    render() {\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-8 offset-2\">\n                        <div class=\"input-group mb-3\">\n                            <input autoFocus type=\"text\" class=\"form-control\" placeholder=\"Search for files\" aria-label=\"Search for files\" aria-describedby=\"button-addon2\" onChange={this.handleInputChange.bind(this)} />\n                            <button class=\"btn btn-primary\" type=\"button\" onClick={this.handleSearch.bind(this)}><i class=\"bi bi-search\"></i></button>\n                            <button class=\"btn btn-outline-secondary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#filtersForm\"><i class=\"bi bi-filter\"></i></button>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row collapse mb-3\" id=\"filtersForm\">\n                    <div class=\"col-8 offset-2\" >\n                        <SearchAdvanced update={this.updateAdvancedFilterQuery} />\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-6 offset-2\">\n                        {this.state.searchResultRows}\n                    </div>\n\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchForm","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass ReindexState extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = { clicked: false }\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n\n        if (this.state.clicked === true) {\n            return\n        }\n\n        fetch(`${API_URL}/index/reindex/${this.props.indextype}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                this.setState({ clicked: true })\n            })\n\n        return false\n    }\n\n    render() {\n        // console.log(this.state.clicked)\n\n        return (\n            <button data-placement=\"top\" title=\"Reindex\" class=\"btn btn-sm btn-success\" href=\"#\" onClick={this.handleClick}><i class=\"bi bi-arrow-repeat\"></i></button>\n        )\n    }\n\n}\n\nexport default ReindexState","import React from \"react\";\n\nclass EmptyIndexList extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container mt-5\">\n\n\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col-6 offset-3\">\n\n\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            You have no indexed directories. Click button below to add directory.\n                        </div>\n\n                        <div align=\"center\">\n                        <a href=\"/gui/index/create\" class=\"btn btn-lg btn-success\"><i class=\"bi bi-plus\"></i> Create new index</a>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptyIndexList","import React from 'react';\nimport ReindexState from './ReindexState';\nimport EmptyIndexList from './EmptyIndexList';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass IndexInfo extends React.Component {\n\n    // const history = useHistory()\n\n    constructor(props) {\n        super(props)\n\n        this.result = []\n        this.requestFinished = false\n\n        this.handleRemove = this.handleRemove.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.refreshList()\n\n    }\n\n    refreshList() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n                this.requestFinished = true\n                this.setState({});\n            });\n    }\n\n\n    handleRemove(row) {\n        if (window.confirm(\"Are you sure?\")) {\n\n            fetch(`${API_URL}/index/remove/${row.name}`, {\n                method: 'DELETE',\n                headers: { 'Content-Type': 'application/json' },            \n            })\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n                this.setState({});\n            });      \n        }\n        return false\n    }\n\n    render() {\n\n        if (this.requestFinished === false) {\n            return(\"\")\n        }\n\n        if (this.result.length === 0) {\n            return (\n                <EmptyIndexList />\n            )\n        }\n\n        return (\n            \n            <div class=\"container mt-5\">\n            <div class=\"row\">\n                <div class=\"col-10 offset-1\">\n                    <h3>List of indexes <a href=\"/gui/index/create\" class=\"btn btn-success btn-sm\"><i class=\"bi bi-plus\"></i> New</a></h3>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Paths</th>\n                                <th>Ignore</th>\n                                <th>Last indexed</th>\n                                <th>&nbsp;</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.result.map(directoryRow => (\n                                <tr>\n                                    <td><i class=\"bi bi-folder2-open\"></i> {directoryRow.name}</td>\n                                    <td>\n                                        {directoryRow.path.map(pathRow => (\n                                            <small class=\"badge bg-primary ms-1\">{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    <td>\n                                    {directoryRow.ignorePath.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">{pathRow}</small>\n                                        ))}\n                                    {directoryRow.ignorePhrase.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*{pathRow}*</small>\n                                        ))}                                        \n                                    {directoryRow.ignoreExtension.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*.{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    <td>\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleDateString()}\n                                        &nbsp;\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleTimeString()}\n                                    </td>\n\n                                    <td>\n                                        <a data-placement=\"top\" title=\"Edit\" href={`/gui/index/edit/${directoryRow.name}`} class=\"btn btn-light btn-sm me-1\"><i class=\"bi bi-pencil\"></i></a>\n                                        <a data-placement=\"top\" title=\"Remove\" onClick={() => this.handleRemove(directoryRow)} href=\"#\" class=\"btn btn-danger btn-sm me-1\"><i class=\"bi bi-trash\"></i></a>\n                                        <ReindexState indextype={directoryRow.name} />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default IndexInfo","import React from 'react';\nimport { withRouter } from \"react-router\";\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass IndexForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formData: {\n                \"extractMetadata\": true,\n                \"ignoreExtension\": [],\n                \"ignorePath\": [],\n                \"ignorePhrase\": [],\n                \"indexMode\": \"full\",\n                \"intervalUpdateMetadata\": 3600,\n                \"name\": \"\",\n                \"path\": []\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.name;\n        if (id !== undefined) {\n            fetch(`${API_URL}/index/get/${id}`)\n                .then(res => res.json())\n                .then((result) => {\n                    this.setState({ formData: result });\n                });\n        }\n\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        fetch(`${API_URL}/index/set`, {\n            method: 'POST',\n            body: JSON.stringify(this.state.formData),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                console.log(response)\n                window.location = \"/gui/index\"\n            })\n    }\n\n    handleFormEdit(event) {\n\n        if (event.type !== \"change\") {\n            return\n        }\n\n        let formData = this.state.formData\n\n        switch (event.target.id) {\n            case \"inputName\":\n                formData.name = event.target.value.replace(/[^a-z0-9\\-]+/gi, \"\")\n                break\n            case \"inputPath\":\n                formData.path = event.target.value.split(\",\")\n                break\n            case \"inputPathIgnore\":\n                formData.ignorePath = event.target.value.split(\",\")\n                break\n            case \"inputPhraseIgnore\":\n                formData.ignorePhrase = event.target.value.split(\",\")\n                break\n            case \"inputExtIgnore\":\n                formData.ignoreExtension = event.target.value.split(\",\")\n                break\n            case \"inputUpdateStructure\":\n                formData.intervalUpdateStructure = event.target.value.replace(/[^0-9]+/gi, \"\")\n                break\n            case \"inputExtractMetadata\":\n                formData.extractMetadata = event.target.checked\n                break\n        }\n\n        this.setState({ formData: formData })\n    }\n\n    render() {\n        let id = this.props.match.params.name\n        let formEditing = true\n        if (id === undefined) {\n            formEditing = false\n        }\n\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-10 offset-1\">\n                        <h1>{formEditing ? \"Edit\" : \"Create\"} index</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <div class=\"row mb-3\">\n                                <label for=\"inputName\" class=\"col-sm-3 col-form-label\">Index name</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.name} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputName\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    {/* <small class=\"text-muted\">Input desription</small> */}\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">Path to index</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.path.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPath\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Full path to index, you can add here multiple paths separate them with coma <br />eg. (/home/user/dir1,/home/user/dir2)</small>\n                                </div>\n                            </div>\n\n                            <h4>Filter settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPathIgnore\" class=\"col-sm-3 col-form-label\">Ignore path</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePath.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPathIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore paths from indexing separated by coma <br />eg. (/home/user/dir1/unwanted-path,/home/user/dir2/some/unwanted)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPhraseIgnore\" class=\"col-sm-3 col-form-label\">Ignore phrase</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePhrase.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPhraseIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file/directory paths with phrase separated by coma. You can use * to match more files/directories <br />eg. (.git,vendor,attr*)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtIgnore\" class=\"col-sm-3 col-form-label\">Ignore extensions</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignoreExtension.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputExtIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file extensions separated by coma <br />eg. (jpg,mp4,tmp)</small>\n                                </div>\n                            </div>\n\n\n                            <h4>Reindex settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputUpdateStructure\" class=\"col-sm-3 col-form-label\">File structure interval</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.intervalUpdateStructure} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputUpdateStructure\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Refresh directory structure interval in seconds.</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtractMetadata\" class=\"col-sm-3 col-form-label\">Extract metadata from files</label>\n                                <div class=\"col-sm-5\">\n                                    <input onChange={this.handleFormEdit} checked={this.state.formData.extractMetadata} type=\"checkbox\" class=\"form-check-input\" id=\"inputExtractMetadata\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Enable this option when Filehunter should extract metadata/content from files and make it searchable</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-3 offset-6\">\n                                    <a href=\"/gui/index\" class=\"btn btn-link\">Cancel</a>\n                                    <button type=\"submit\" class=\"btn btn-primary float-right\">Save</button>\n                                </div>\n                            </div>\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(IndexForm)","import './App.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Navbar from './Navbar.js';\nimport SearchForm from './Searchform.js';\nimport IndexInfo from './IndexInfo';\nimport IndexForm from './IndexForm';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <Navbar />\n      </header>\n      <main class=\"flex-shrink-2\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/gui/\" />\n            </Route>\n            <Route exact path=\"/gui/\">\n              <SearchForm />\n            </Route>\n            <Route exact path=\"/gui/index\">\n              <IndexInfo />\n            </Route>\n            <Route path=\"/gui/index/edit/:name\">\n              <IndexForm />\n            </Route>\n            <Route path=\"/gui/index/create\">\n              <IndexForm />\n            </Route>\n          </Switch>\n\n        </BrowserRouter>\n      \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
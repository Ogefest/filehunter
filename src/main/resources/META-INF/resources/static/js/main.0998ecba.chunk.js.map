{"version":3,"sources":["Navbar.js","SystemTaskStatus.js","SearchResultRow.js","EmptySearchResult.js","SearchAdvanced.js","Searchform.js","ReindexState.js","EmptyIndexList.js","IndexInfo.js","IndexForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","React","Component","class","href","type","id","rel","process","target","SearchResultRow","props","getColorByName","bind","str","hash","i","length","charCodeAt","colour","toString","substr","bytes","si","dp","thresh","Math","abs","units","u","r","round","toFixed","iconclass","this","params","indexname","fileSize","humanFileSize","size","uuid","name","style","fontSize","border","padding","borderRadius","marginLeft","marginRight","color","path","EmptySearchResult","align","SearchAdvanced","indexList","indexName","extension","minmultiplier","maxmultiplier","filters","minsize","maxsize","state","fetch","then","res","json","result","requestFinished","setState","e","k","v","value","trim","Date","parse","parseInt","update","for","onChange","handleAdvancedFilterChange","map","item","onTouchEnd","handleUiHelper","onMouseUp","min","max","selected","SearchForm","searchResultRows","sr","lastQuery","currentQuery","activeQuery","searchTimeout","advancedFilters","updateQueryWhenActive","updateAdvancedFilterQuery","clearInterval","intervalId","s","handleSearch","qs","Object","keys","key","encodeURIComponent","join","queryTodo","setTimeout","push","catch","err","console","log","clearTimeout","autoFocus","placeholder","handleInputChange","onClick","ReindexState","clicked","handleClick","indextype","method","headers","response","title","EmptyIndexList","IndexInfo","handleRemove","refreshList","row","window","confirm","directoryRow","pathRow","ignorePath","ignorePhrase","ignoreExtension","lastStructureIndexed","toLocaleDateString","toLocaleTimeString","IndexForm","formData","handleSubmit","handleFormEdit","match","undefined","event","preventDefault","body","JSON","stringify","location","replace","split","intervalUpdateStructure","extractMetadata","checked","formEditing","onSubmit","withRouter","App","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0998ecba.chunk.js","sourcesContent":["import React from 'react';\nimport SystemTaskStatus from './SystemTaskStatus';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-light\" >\n        <div class=\"container-fluid\">\n          <span class=\"badge bg-primary\">FH</span> <a class=\"navbar-brand\" href=\"/\">Filehunter</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav ms-auto mb-1 mb-lg-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" aria-current=\"page\" href=\"/\"><i class=\"bi bi-search\"></i> Search</a>\n              </li>\n              <li class=\"nav-item\">\n                <a href=\"/gui/index\" class=\"nav-link menu-item nav-active\"><i class=\"bi bi-folder2-open\"></i> Indexes</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href={`${API_URL}/api-doc`} target=\"_blank\" class=\"nav-link menu-item\"><i class=\"bi bi-code-slash\"></i> API Doc</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href=\"https://github.com/Ogefest/filehunter\" target=\"_blank\" class=\"nav-link  menu-item\"><i class=\"bi bi-github\"></i> Github</a>\n              </li>\n\n              {/* <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Dropdown\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                  <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                  <li><hr class=\"dropdown-divider\" /></li>\n                  <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                </ul>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Link</a>\n              </li> */}\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n    )\n  }\n}\n\nexport default Navbar;","import React from 'react';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass SystemTaskStatus extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.refreshInterval = 10000\n        this.refreshStatus = this.refreshStatus.bind(this)\n    }   \n    \n    componentDidMount() {\n        this.refreshStatus()\n    }\n\n    refreshStatus() {\n        fetch(`${API_URL}/system/status`)\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n\n                setTimeout(this.refreshStatus, this.refreshInterval)\n                this.setState({});\n            });\n    }\n\n    render() {\n\n        if (this.result === undefined) {\n            return(\"\")\n        }\n        if (this.result.currentTask !== \"\") {\n            this.refreshInterval = 1000\n        } else {\n            this.refreshInterval = 10000\n            return(\"\")\n        }\n\n        return(\n            <span class=\"badge bg-success\">Task {this.result.currentTask}</span>\n        )\n    }\n}\n\nexport default SystemTaskStatus","import React from 'react';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass SearchResultRow extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.getColorByName = this.getColorByName.bind(this)\n    }\n\n    getColorByName(str) {\n        var hash = 0;\n        for (var i = 0; i < str.length; i++) {\n          hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        var colour = '#';\n        for (var i = 0; i < 3; i++) {\n          var value = (hash >> (i * 8)) & 0xFF;\n          colour += ('00' + value.toString(16)).substr(-2);\n        }\n        return colour;\n      }  \n      \n     humanFileSize(bytes, si=true, dp=2) {\n        const thresh = si ? 1000 : 1024;\n      \n        if (Math.abs(bytes) < thresh) {\n          return bytes + ' B';\n        }\n      \n        const units = si \n          ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n          : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n        let u = -1;\n        const r = 10**dp;\n      \n        do {\n          bytes /= thresh;\n          ++u;\n        } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n      \n      \n        return bytes.toFixed(dp) + ' ' + units[u];\n      }      \n\n    render() {\n        let iconclass = \"bi-file-earmark\"\n        if (this.props.params.type === 'd') {\n            iconclass = \"bi-folder2\"\n        }\n\n        let badgeColor = this.getColorByName(this.props.params.indexname)\n        let fileSize = this.humanFileSize(this.props.params.size)\n\n        return (\n            <div class=\"row mb-4\" key={this.props.params.uuid}>\n                \n                    {/* <h5>{this.props.params.name}</h5> */}\n                    \n                    <h5>\n                        <div>\n                            \n                        <i class={`bi ${iconclass}`}></i> \n                        {/* <small class=\"badge bg-success\" >{this.props.params.indexname}</small> */}\n                    \n                    <a rel=\"noreferrer\" target=\"_blank\" href={`${API_URL}/download/${this.props.params.uuid}`}>{this.props.params.name}</a>\n                    <small class=\"\" style={{fontSize: '0.7em', border: '1px solid green', padding: '2px', borderRadius: '5px', marginLeft: '5px', marginRight: '3px', color: 'green'}} >{this.props.params.indexname}</small>\n                    {/* <small class=\"badge\" style={{backgroundColor: badgeColor, fontSize: '10px'}}>{this.props.params.indexname}</small>  */}\n                    <small class=\"\" style={{fontSize: '0.7em', color: '#6d6d6d'}}>{fileSize}</small>\n                    </div>\n                    </h5>\n                    \n                    <div>\n                    \n                    <small class=\"text-success\">{this.props.params.path}</small>\n                    </div>\n                \n            </div>\n        )\n    }\n    \n}\n\nexport default SearchResultRow","import React from \"react\";\n\nclass EmptySearchResult extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col-8 offset-4\">\n\n\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            Empty search results\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptySearchResult","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass SearchAdvanced extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.indexList = []\n        this.indexName = \"\"\n        this.extension = \"\"\n        this.minmultiplier = 1024 * 1024\n        this.maxmultiplier = 1024 * 1024\n\n        this.filters = { minsize: 0, maxsize: 0 }\n\n        this.state = {\n            filters: {\n                minsize: 0, maxsize: 0\n            },\n        }\n\n    }\n\n    componentDidMount() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.indexList = result;\n                this.requestFinished = true\n                this.setState({ filters: this.filters })\n            });\n    }\n\n    handleAdvancedFilterChange(e) {\n\n        let k = e.target.name;\n        let v = e.target.value;\n\n        if (v.trim().length == 0) {\n            delete this.filters[k]\n        } else {\n            if (k === 'modified_after' || k === 'modified_before') {\n                v = Date.parse(v)\n            }\n\n            this.filters[k] = v;\n        }\n        if (k === \"maxsize\" && v != '0') {\n            this.filters[k] = parseInt(v) * this.maxmultiplier;\n        }\n        if (k === \"minsize\" && v != '0') {\n            this.filters[k] = parseInt(v) * this.minmultiplier;\n        }\n\n        this.props.update(this.filters)\n        this.setState({ filters: this.filters })\n    }\n\n    handleUiHelper(e) {\n\n        if (e.target.name === \"maxmultiplier\") {\n            this.maxmultiplier = parseInt(e.target.value)\n        }\n        if (e.target.name === \"minmultiplier\") {\n            this.minmultiplier = parseInt(e.target.value)\n        }\n\n        if (e.target.name === 'maxsizerange') {\n            this.filters['maxsize'] = parseInt(e.target.value) * this.maxmultiplier\n        }\n        if (e.target.name === 'minsizerange') {\n            this.filters['minsize'] = parseInt(e.target.value) * this.minmultiplier\n        }\n\n        this.props.update(this.filters)\n        this.setState({ filters: this.filters })\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"row mb-3\" id=\"\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"col-form-label\" for=\"selectIndexname\">Index</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n\n                        <select onChange={this.handleAdvancedFilterChange.bind(this)} name=\"index\" id=\"selectIndexname\" class=\"form-select form-select-sm\" aria-label=\"Index name\">\n                            <option></option>\n                            {this.indexList.map(item =>\n                                <option value={item.name}>{item.name}</option>\n                            )}\n                        </select>\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputExtension\">Extension</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputExtension\" name=\"ext\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"extension\" aria-describedby=\"extension\" />\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputFilename\">File name</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputFilename\" name=\"name\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"filename\" aria-describedby=\"filename\" />\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputPathname\">Path name</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputPathname\" name=\"path\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"path name\" aria-describedby=\"path name\" />\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputContent\">File contains</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputContent\" name=\"content\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"path name\" aria-describedby=\"path name\" />\n                    </div>\n\n                </div>                \n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputModified\">Modified between</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} name=\"modified_after\" type=\"date\" class=\"form-control form-control-sm\" aria-label=\"modified between\" aria-describedby=\"modified between\" />\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} name=\"modified_before\" type=\"date\" class=\"form-control form-control-sm\" aria-label=\"modified between\" aria-describedby=\"modified between\" />\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputMinimumsize\">Minimum size</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onTouchEnd={this.handleUiHelper.bind(this)} onMouseUp={this.handleUiHelper.bind(this)} name=\"minsizerange\" type=\"range\" min=\"0\" max=\"1024\" class=\"form-range\" aria-label=\"minimum size\" aria-describedby=\"minimum size\" />\n\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} value={this.state.filters.minsize / this.minmultiplier} id=\"inputMinimumsize\" name=\"minsize\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"minimum size\" aria-describedby=\"minimum size\" />\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <select class=\"form-select form-select-sm\" onChange={this.handleUiHelper.bind(this)} name=\"minmultiplier\">\n                            <option value=\"1\">B</option>\n                            <option value=\"1024\">KB</option>\n                            <option selected value=\"1048576\">MB</option>\n                            <option value=\"1073741824\">TB</option>\n                        </select>\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputMaximumsize\">Maximum size</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onTouchEnd={this.handleUiHelper.bind(this)} onMouseUp={this.handleUiHelper.bind(this)} name=\"maxsizerange\" type=\"range\" min=\"0\" max=\"1024\" class=\"form-range\" aria-label=\"maximum size\" aria-describedby=\"maximum size\" />\n\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} value={this.state.filters.maxsize / this.maxmultiplier} id=\"inputMaximumsize\" name=\"maxsize\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"maximum size\" aria-describedby=\"maximum size\" />\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <select class=\"form-select form-select-sm\" onChange={this.handleUiHelper.bind(this)} name=\"maxmultiplier\">\n                            <option value=\"1\">B</option>\n                            <option value=\"1024\">KB</option>\n                            <option selected value=\"1048576\">MB</option>\n                            <option value=\"1073741824\">TB</option>\n                        </select>\n                    </div>\n\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n\nexport default SearchAdvanced","import React from 'react';\nimport SearchResultRow from './SearchResultRow.js'\nimport EmptySearchResult from './EmptySearchResult.js';\nimport SearchAdvanced from './SearchAdvanced.js';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass SearchForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            searchResultRows: []\n        };\n        this.sr = []\n        this.lastQuery = \"\"\n        this.currentQuery = \"\"\n        // this.advancedFilterQuery = \"\"\n        this.activeQuery = false\n        this.searchTimeout = null\n        this.advancedFilters = {}\n        this.updateQueryWhenActive = null\n\n        this.updateAdvancedFilterQuery = this.updateAdvancedFilterQuery.bind(this)\n\n    }\n\n    componentDidMount() {\n        //   this.intervalId = setInterval(this.handleSearch.bind(this), 500);\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalId)\n    }\n\n    updateAdvancedFilterQuery(s) {\n        this.advancedFilters = s\n\n        // let asd = new URLSearchParams(s).toString();\n\n\n        // if (this.currentQuery == \"\") {\n        // this.advancedFilterQuery = this.advancedFilterQuery.trim().substring(3)\n        // }\n\n        this.handleSearch()\n    }\n\n    handleSearch() {\n\n        let qs = Object.keys(this.advancedFilters)\n            .map(key => `filter[${encodeURIComponent(key)}]=${encodeURIComponent(this.advancedFilters[key])}`)\n            .join('&');\n\n        let queryTodo = `${API_URL}/search?q=${encodeURIComponent(this.currentQuery)}&${qs}`\n\n        if (queryTodo === this.lastQuery) {\n            return;\n        }\n        if (this.activeQuery === true) {\n            if (this.updateQueryWhenActive === null) {\n                clearInterval(this.updateQueryWhenActive)\n            }\n            this.updateQueryWhenActive = setTimeout(this.handleSearch(), 500)\n            return\n        }\n\n        this.activeQuery = true\n\n        fetch(queryTodo)\n            .then(res => res.json())\n            .then((result) => {\n                this.lastQuery = queryTodo;\n                this.activeQuery = false;\n\n                this.sr = []\n                result.map((item) => (\n                    this.sr.push(<SearchResultRow params={item} />)\n                ))\n                if (this.sr.length === 0) {\n                    this.sr.push(<EmptySearchResult />)\n                }\n\n                this.setState({ searchResultRows: this.sr })\n            })\n            .catch(err => {\n                this.activeQuery = false\n                console.log(err)\n            })\n    }\n\n    handleInputChange(e) {\n        this.currentQuery = e.target.value\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout)\n        }\n        this.searchTimeout = setTimeout(this.handleSearch.bind(this), 300);\n    }\n\n    render() {\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-lg-12 col-md-12\">\n                        <div class=\"input-group mb-3\">\n                            <input autoFocus type=\"text\" class=\"form-control input-control-lg\" placeholder=\"Search for files\" aria-label=\"Search for files\" aria-describedby=\"button-addon2\" onChange={this.handleInputChange.bind(this)} />\n                            <button class=\"btn btn-primary btn-lg\" type=\"button\" onClick={this.handleSearch.bind(this)}><i class=\"bi bi-search\"></i></button>\n                            <button class=\"btn btn-outline-secondary btn-lg\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#filtersForm\"><i class=\"bi bi-filter\"></i></button>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row row-cols-1 row-cols-lg-2\">\n\n                    <div class=\"col order-lg-last order-md-first order-sm-first order-xs-first collapse\" id=\"filtersForm\">\n                        <SearchAdvanced update={this.updateAdvancedFilterQuery} />\n                    </div>\n\n                    <div class=\"col order-lg-first order-md-last order-sm-last order-xs-last\">\n                        {this.state.searchResultRows}\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchForm","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass ReindexState extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = { clicked: false }\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n\n        if (this.state.clicked === true) {\n            return\n        }\n\n        fetch(`${API_URL}/index/reindex/${this.props.indextype}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                this.setState({ clicked: true })\n            })\n\n        return false\n    }\n\n    render() {\n        // console.log(this.state.clicked)\n\n        return (\n            <button data-placement=\"top\" title=\"Reindex\" class=\"btn btn-sm btn-success\" href=\"#\" onClick={this.handleClick}><i class=\"bi bi-arrow-repeat\"></i></button>\n        )\n    }\n\n}\n\nexport default ReindexState","import React from \"react\";\n\nclass EmptyIndexList extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container mt-5\">\n\n\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col-6 offset-3\">\n\n\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            You have no indexed directories. Click button below to add directory.\n                        </div>\n\n                        <div align=\"center\">\n                        <a href=\"/gui/index/create\" class=\"btn btn-lg btn-success\"><i class=\"bi bi-plus\"></i> Create new index</a>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptyIndexList","import React from 'react';\nimport ReindexState from './ReindexState';\nimport EmptyIndexList from './EmptyIndexList';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass IndexInfo extends React.Component {\n\n    // const history = useHistory()\n\n    constructor(props) {\n        super(props)\n\n        this.result = []\n        this.requestFinished = false\n\n        this.handleRemove = this.handleRemove.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.refreshList()\n\n    }\n\n    refreshList() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n                this.requestFinished = true\n                this.setState({});\n            });\n    }\n\n\n    handleRemove(row) {\n        if (window.confirm(\"Are you sure?\")) {\n\n            fetch(`${API_URL}/index/remove/${row.name}`, {\n                method: 'DELETE',\n                headers: { 'Content-Type': 'application/json' },            \n            })\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n                this.setState({});\n            });      \n        }\n        return false\n    }\n\n    render() {\n\n        if (this.requestFinished === false) {\n            return(\"\")\n        }\n\n        if (this.result.length === 0) {\n            return (\n                <EmptyIndexList />\n            )\n        }\n\n        return (\n            \n            <div class=\"container mt-5\">\n            <div class=\"row\">\n                <div class=\"col-10 offset-1\">\n                    <h3>List of indexes <a href=\"/gui/index/create\" class=\"btn btn-success btn-sm\"><i class=\"bi bi-plus\"></i> New</a></h3>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Paths</th>\n                                <th>Ignore</th>\n                                <th>Last indexed</th>\n                                <th>&nbsp;</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.result.map(directoryRow => (\n                                <tr>\n                                    <td><i class=\"bi bi-folder2-open\"></i> {directoryRow.name}</td>\n                                    <td>\n                                        {directoryRow.path.map(pathRow => (\n                                            <small class=\"badge bg-primary ms-1\">{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    <td>\n                                    {directoryRow.ignorePath.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">{pathRow}</small>\n                                        ))}\n                                    {directoryRow.ignorePhrase.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*{pathRow}*</small>\n                                        ))}                                        \n                                    {directoryRow.ignoreExtension.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*.{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    <td>\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleDateString()}\n                                        &nbsp;\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleTimeString()}\n                                    </td>\n\n                                    <td>\n                                        <a data-placement=\"top\" title=\"Edit\" href={`/gui/index/edit/${directoryRow.name}`} class=\"btn btn-light btn-sm me-1\"><i class=\"bi bi-pencil\"></i></a>\n                                        <a data-placement=\"top\" title=\"Remove\" onClick={() => this.handleRemove(directoryRow)} href=\"#\" class=\"btn btn-danger btn-sm me-1\"><i class=\"bi bi-trash\"></i></a>\n                                        <ReindexState indextype={directoryRow.name} />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default IndexInfo","import React from 'react';\nimport { withRouter } from \"react-router\";\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass IndexForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formData: {\n                \"extractMetadata\": true,\n                \"ignoreExtension\": [],\n                \"ignorePath\": [],\n                \"ignorePhrase\": [],\n                \"indexMode\": \"full\",\n                \"intervalUpdateMetadata\": 3600,\n                \"name\": \"\",\n                \"path\": []\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.name;\n        if (id !== undefined) {\n            fetch(`${API_URL}/index/get/${id}`)\n                .then(res => res.json())\n                .then((result) => {\n                    this.setState({ formData: result });\n                });\n        }\n\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        fetch(`${API_URL}/index/set`, {\n            method: 'POST',\n            body: JSON.stringify(this.state.formData),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                console.log(response)\n                window.location = \"/gui/index\"\n            })\n    }\n\n    handleFormEdit(event) {\n\n        if (event.type !== \"change\") {\n            return\n        }\n\n        let formData = this.state.formData\n\n        switch (event.target.id) {\n            case \"inputName\":\n                formData.name = event.target.value.replace(/[^a-z0-9\\-]+/gi, \"\")\n                break\n            case \"inputPath\":\n                formData.path = event.target.value.split(\",\")\n                break\n            case \"inputPathIgnore\":\n                formData.ignorePath = event.target.value.split(\",\")\n                break\n            case \"inputPhraseIgnore\":\n                formData.ignorePhrase = event.target.value.split(\",\")\n                break\n            case \"inputExtIgnore\":\n                formData.ignoreExtension = event.target.value.split(\",\")\n                break\n            case \"inputUpdateStructure\":\n                formData.intervalUpdateStructure = event.target.value.replace(/[^0-9]+/gi, \"\")\n                break\n            case \"inputExtractMetadata\":\n                formData.extractMetadata = event.target.checked\n                break\n        }\n\n        this.setState({ formData: formData })\n    }\n\n    render() {\n        let id = this.props.match.params.name\n        let formEditing = true\n        if (id === undefined) {\n            formEditing = false\n        }\n\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-10 offset-1\">\n                        <h1>{formEditing ? \"Edit\" : \"Create\"} index</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <div class=\"row mb-3\">\n                                <label for=\"inputName\" class=\"col-sm-3 col-form-label\">Index name</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.name} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputName\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    {/* <small class=\"text-muted\">Input desription</small> */}\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">Path to index</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.path.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPath\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Full path to index, you can add here multiple paths separate them with coma <br />eg. (/home/user/dir1,/home/user/dir2)</small>\n                                </div>\n                            </div>\n\n                            <h4>Filter settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPathIgnore\" class=\"col-sm-3 col-form-label\">Ignore path</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePath.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPathIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore paths from indexing separated by coma <br />eg. (/home/user/dir1/unwanted-path,/home/user/dir2/some/unwanted)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPhraseIgnore\" class=\"col-sm-3 col-form-label\">Ignore phrase</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePhrase.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPhraseIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file/directory paths with phrase separated by coma. You can use * to match more files/directories <br />eg. (.git,vendor,attr*)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtIgnore\" class=\"col-sm-3 col-form-label\">Ignore extensions</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignoreExtension.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputExtIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file extensions separated by coma <br />eg. (jpg,mp4,tmp)</small>\n                                </div>\n                            </div>\n\n\n                            <h4>Reindex settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputUpdateStructure\" class=\"col-sm-3 col-form-label\">File structure interval</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.intervalUpdateStructure} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputUpdateStructure\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Refresh directory structure interval in seconds.</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtractMetadata\" class=\"col-sm-3 col-form-label\">Extract metadata from files</label>\n                                <div class=\"col-sm-5\">\n                                    <input onChange={this.handleFormEdit} checked={this.state.formData.extractMetadata} type=\"checkbox\" class=\"form-check-input\" id=\"inputExtractMetadata\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Enable this option when Filehunter should extract metadata/content from files and make it searchable</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-3 offset-6\">\n                                    <a href=\"/gui/index\" class=\"btn btn-link\">Cancel</a>\n                                    <button type=\"submit\" class=\"btn btn-primary float-right\">Save</button>\n                                </div>\n                            </div>\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(IndexForm)","import './App.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Navbar from './Navbar.js';\nimport SearchForm from './Searchform.js';\nimport IndexInfo from './IndexInfo';\nimport IndexForm from './IndexForm';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <Navbar />\n      </header>\n      <main class=\"flex-shrink-2\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/gui/\" />\n            </Route>\n            <Route exact path=\"/gui/\">\n              <SearchForm />\n            </Route>\n            <Route exact path=\"/gui/index\">\n              <IndexInfo />\n            </Route>\n            <Route path=\"/gui/index/edit/:name\">\n              <IndexForm />\n            </Route>\n            <Route path=\"/gui/index/create\">\n              <IndexForm />\n            </Route>\n          </Switch>\n\n        </BrowserRouter>\n      \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
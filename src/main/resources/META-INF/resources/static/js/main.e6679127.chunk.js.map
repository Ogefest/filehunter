{"version":3,"sources":["Navbar.js","ReindexState.js","EmptyIndexList.js","IndexInfo.js","configuration/filesystem.js","configuration/webdav.js","configuration/S3.js","configuration/Ftp.js","IndexForm.js","EmptySearchResult.js","ItemBreadcrumb.js","ItemFileRow.js","BrowseBreadcrumb.js","IndexList.js","SearchAdvanced.js","StartupPlaceholder.js","BrowserPagginator.js","Toast.js","Browser.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","currentQuery","currentInputQueryValue","inputQueryRef","React","createRef","handleChangeInput","bind","handleItemSearch","this","setCallbackClearInputQuery","current","value","setState","ev","history","location","pathname","push","target","trim","length","filters","activeQuery","updateQueryWhenActive","clearInterval","setTimeout","queryBackend","class","className","to","type","id","ref","onChange","placeholder","rel","href","process","Component","withRouter","ReindexState","console","log","state","clicked","handleClick","fetch","indextype","method","headers","then","response","title","onClick","EmptyIndexList","align","IndexInfo","result","requestFinished","handleRemove","refreshList","setInterval","res","json","row","window","confirm","name","map","directoryRow","status","ignorePath","pathRow","ignorePhrase","ignoreExtension","Date","lastStructureIndexed","toLocaleDateString","toLocaleTimeString","Filesystem","handleFormEdit","handleSetConfiguration","for","formData","configuration","path","Webdav","url","username","password","S3","endpoint","region","bucket","accesskey","secretkey","Ftp","host","port","IndexForm","handleSubmit","match","params","undefined","event","preventDefault","body","JSON","stringify","k","v","replace","split","intervalUpdateStructure","extractMetadata","checked","reindexType","formEditing","isReadonly","configComponent","onSubmit","readOnly","required","selected","join","EmptySearchResult","ItemBreadcrumb","handleOpenDirectory","e","handleBrowse","attributes","index","tmp","splice","pathElems","fullPath","label","tmpIndex","item","ItemFileRow","handleItemClick","bytes","si","dp","thresh","Math","abs","units","u","r","round","toFixed","indexstatus","open","encodeURIComponent","cls","ext","toLowerCase","iconclass","handleGetIconClass","itemBreadcrumb","searchResult","fileSize","humanFileSize","size","linkClass","style","fontSize","lastModified","BrowseBreadcrumb","pathToShow","IndexList","availableIndexes","SearchAdvanced","indexList","indexName","extension","minmultiplier","maxmultiplier","minsize","maxsize","parse","parseInt","restoreMinSize","restoreMaxSize","update","handleAdvancedFilterChange","onTouchEnd","handleUiHelper","onMouseUp","min","max","StartupPlaceholder","BrowserPagginator","currentPage","setCurrentPage","setPagginatorPageState","pageToShow","page","setPage","startPage","endPage","maxPage","pageLinks","tabindex","i","Browser","searchResultRows","currentIndex","currentPath","currentBrowseList","perPage","showItems","showSearchResult","refreshIndexList","setPageNumber","clearPagginatorPageNumber","handleChangeFilters","setItemRefresh","number","scrollTo","openFirstResult","showItemsPath","sr","forEach","elem","query","handleSearch","presentItems","setNavbarInputClear","queryBrowse","currentItems","catch","err","qs","Object","keys","key","queryWithAsterisk","queryTodo","lastQuery","pagginatorComponent","fcn","filterButton","slice","App","handleItemsRefreshFromBrowser","handleItemRefreshFromNavbar","hadnleClearNavbarInputQuery","callbackNavbarClearQuery","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6679127.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass Navbar extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    // this.filters = {}\n    this.currentQuery = ''\n    this.currentInputQueryValue = ''\n\n    this.inputQueryRef = React.createRef();\n\n    this.handleChangeInput = this.handleChangeInput.bind(this)\n    this.handleItemSearch = this.props.handleItemSearch.bind(this)\n    // this.handleChangeFilters = this.handleChangeFilters.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.setCallbackClearInputQuery(() => {\n      this.inputQueryRef.current.value = ''\n\n      this.currentQuery = ''\n      this.setState({})\n    })\n  }\n\n  handleChangeInput(ev) {\n    if (this.props.history.location.pathname != '/gui/') {\n      this.props.history.push('/gui/')\n    }\n\n    this.currentQuery = ev.target.value\n    if (this.currentQuery.trim().length == 0) {\n      this.filters = {}\n    }\n\n    if (this.activeQuery === true) {\n      if (this.updateQueryWhenActive !== null) {\n        clearInterval(this.updateQueryWhenActive)\n      }\n      this.updateQueryWhenActive = setTimeout(this.queryBackend(), 500)\n      return\n    }\n    this.handleItemSearch(this.currentQuery)\n\n    // this.queryBackend()\n  }\n\n  // handleChangeFilters(filters) {\n  //   this.filters = filters;\n  //   // this.queryBackend()\n  // }\n\n  // queryBackend() {\n\n  //   // let qs = \"\"\n  //   const qs = Object.keys(this.filters)\n  //     .map(key => `filter[${key}]=${this.filters[key]}`)\n  //     .join('&');\n\n  //   let queryWithAsterisk = ''\n  //   if (this.currentQuery.trim().length > 0) {\n  //     queryWithAsterisk = this.currentQuery.trim() + '*'\n  //   }\n\n  //   let queryTodo = `${API_URL}/search?q=${encodeURIComponent(queryWithAsterisk)}&${qs}`\n\n  //   this.activeQuery = true\n\n  //   fetch(queryTodo)\n  //     .then(res => res.json())\n  //     .then((result) => {\n  //       this.lastQuery = queryTodo;\n  //       setTimeout(() => this.activeQuery = false, 100);\n\n  //       this.handleItemSearch(result)\n\n  //       this.setState({})\n  //     })\n  //     .catch(err => {\n  //       // this.activeQuery = false\n  //       console.log(err)\n  //     })\n  // }\n\n\n  render() {\n\n    \n\n    return (\n      <>\n\n      <nav class=\"navbar navbar-expand-lg navbar-light fixed-top bg-light\" >\n        <div class=\"container-fluid\">\n          <span class=\"badge bg-primary\">FH</span> <Link className=\"navbar-brand\" to=\"/gui/\">FileHunter</Link>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n            <form class=\"d-flex flex-grow-1 me-5 ms-5\">\n              <input ref={this.inputQueryRef} onChange={this.handleChangeInput} class=\"form-control me-3\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n              {/* {filterButton} */}\n            </form>\n\n\n            <ul class=\"navbar-nav ms-auto mb-1 mb-lg-0\">\n              <li class=\"nav-item\">\n                <Link className=\"nav-link menu-item nav-active\" to=\"/gui/index\"><i class=\"bi bi-folder2-open\"></i> Indexes</Link>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href={`${API_URL}/api-doc`} target=\"_blank\" class=\"nav-link menu-item\"><i class=\"bi bi-code-slash\"></i> API Doc</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href=\"https://github.com/Ogefest/filehunter\" target=\"_blank\" class=\"nav-link  menu-item\"><i class=\"bi bi-github\"></i> Github</a>\n              </li>\n\n            </ul>\n          </div>\n        </div>\n\n        \n      </nav>\n      <br />\n      </>\n    )\n  }\n}\n\nexport default withRouter(Navbar);","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass ReindexState extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = { clicked: false }\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n\n        if (this.state.clicked === true) {\n            return\n        }\n\n        fetch(`${API_URL}/index/reindex/${this.props.indextype}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                this.setState({ clicked: true })\n            })\n\n        return false\n    }\n\n    render() {\n        // console.log(this.state.clicked)\n\n        return (\n            <button data-placement=\"top\" title=\"Reindex\" class=\"btn btn-sm btn-success\" href=\"#\" onClick={this.handleClick}><i class=\"bi bi-arrow-repeat\"></i></button>\n        )\n    }\n\n}\n\nexport default ReindexState","import React from \"react\";\n\nclass EmptyIndexList extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container mt-5\">\n\n\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col-6 offset-3\">\n\n\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            You have no indexed directories. Click button below to add directory.\n                        </div>\n\n                        <div align=\"center\">\n                        <a href=\"/gui/index/create\" class=\"btn btn-lg btn-primary\"><i class=\"bi bi-plus\"></i> Create new index</a>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptyIndexList","import React from 'react';\nimport ReindexState from './ReindexState';\nimport EmptyIndexList from './EmptyIndexList';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass IndexInfo extends React.Component {\n\n    // const history = useHistory()\n\n    constructor(props) {\n        super(props)\n\n        this.state = {result: []}\n\n        this.result = []\n        this.requestFinished = false\n\n        this.handleRemove = this.handleRemove.bind(this)\n        this.refreshList = this.refreshList.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshList()\n        setInterval(() => {\n            this.refreshList()\n        }, 5000)\n    }\n\n     refreshList() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.requestFinished = true\n                this.setState({result: result})\n            });\n    }\n\n\n    handleRemove(row) {\n        if (window.confirm(\"Are you sure?\")) {\n\n            fetch(`${API_URL}/index/remove/${row.name}`, {\n                method: 'DELETE',\n                headers: { 'Content-Type': 'application/json' },            \n            })\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({result: result})\n            });      \n        }\n        return false\n    }\n\n    render() {\n\n        if (this.requestFinished === false) {\n            return(\"\")\n        }\n\n        if (this.state === null) {\n            return (\n                <EmptyIndexList />\n            )\n        }\n\n        if (this.state.result.length === 0) {\n            return (\n                <EmptyIndexList />\n            )\n        }\n\n        return (\n            \n            <div class=\"container mt-5\">\n            <div class=\"row\">\n                <div class=\"col-10 offset-1\">\n                    <h3>List of indexes <a href=\"/gui/index/create\" class=\"btn btn-success btn-sm\"><i class=\"bi bi-plus\"></i> New</a></h3>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Type</th>\n                                <th>Status</th>\n                                <th>Ignore</th>\n                                <th>Last indexed</th>\n                                <th>&nbsp;</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.result.map(directoryRow => (\n                                <tr>\n                                    <td><i class=\"bi bi-folder2-open\"></i> {directoryRow.name}</td>\n                                    <td>\n                                        <small class=\"badge bg-primary ms-1\">{directoryRow.type}</small>\n                                    </td>\n                                    <td>{directoryRow.status}</td>\n                                    <td>\n                                    {directoryRow.ignorePath.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">{pathRow}</small>\n                                        ))}\n                                    {directoryRow.ignorePhrase.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*{pathRow}*</small>\n                                        ))}                                        \n                                    {directoryRow.ignoreExtension.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*.{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    \n                                    <td>\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleDateString()}\n                                        &nbsp;\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleTimeString()}\n                                    </td>\n\n                                    <td>\n                                        <a data-placement=\"top\" title=\"Edit\" href={`/gui/index/edit/${directoryRow.name}`} class=\"btn btn-light btn-sm me-1\"><i class=\"bi bi-pencil\"></i></a>\n                                        <a data-placement=\"top\" title=\"Remove\" onClick={() => this.handleRemove(directoryRow)} href=\"#\" class=\"btn btn-danger btn-sm me-1\"><i class=\"bi bi-trash\"></i></a>\n                                        <ReindexState indextype={directoryRow.name} />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default IndexInfo","import React from \"react\";\n\nclass Filesystem extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        this.props.handleSetConfiguration('path', ev.target.value)\n    }\n\n\n    render() {\n        return (\n            <div class=\"row mb-3\">\n                <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">Path</label>\n                <div class=\"col-sm-5\">\n                    <input class=\"form-control\" id=\"inputFilesystemPath\" onChange={this.handleFormEdit} value={this.props.formData.configuration.path} />\n                </div>\n                <div class=\"col-sm-4\">\n                    <small class=\"text-muted\">Full path to index eg: /home/user/dir1</small>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Filesystem","import React from \"react\";\n\nclass Webdav extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        let value = ev.target.value;\n        let name = ''\n        switch (ev.target.id) {\n            case \"inputWebDavUrl\":\n                name = 'url'\n                break\n            case \"inputWebDavUsername\":\n                name = 'username'\n                break\n            case \"inputWebDavPassword\":\n                name = 'password'\n                break \n        }\n\n        this.props.handleSetConfiguration(name, value);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">WebDav URL</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputWebDavUrl\" onChange={this.handleFormEdit} value={this.props.formData.configuration.url} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">WebDav username</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputWebDavUsername\" onChange={this.handleFormEdit} value={this.props.formData.configuration.username} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">WebDav password</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputWebDavPassword\" onChange={this.handleFormEdit} value={this.props.formData.configuration.password} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Webdav","import React from \"react\";\n\nclass S3 extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        let value = ev.target.value;\n        let name = ''\n        switch (ev.target.id) {\n            case \"inputS3Endpoint\":\n                name = 'endpoint'\n                break\n            case \"inputS3Region\":\n                name = 'region'\n                break\n            case \"inputS3Bucket\":\n                name = 'bucket'\n                break\n            case \"inputS3Accesskey\":\n                name = 'accesskey'\n                break\n            case \"inputS3Secretkey\":\n                name = 'secretkey'\n                break\n        }\n\n        this.props.handleSetConfiguration(name, value);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 endpoint</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Endpoint\" onChange={this.handleFormEdit} value={this.props.formData.configuration.endpoint} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 region</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Region\" onChange={this.handleFormEdit} value={this.props.formData.configuration.region} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 bucket</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Bucket\" onChange={this.handleFormEdit} value={this.props.formData.configuration.bucket} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 accesskey</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Accesskey\" onChange={this.handleFormEdit} value={this.props.formData.configuration.accesskey} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 secretkey</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputS3Secretkey\" onChange={this.handleFormEdit} value={this.props.formData.configuration.secretkey} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default S3","import React from \"react\";\n\nclass Ftp extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        let value = ev.target.value;\n        let name = ''\n        switch (ev.target.id) {\n            case \"inputFtpHost\":\n                name = 'host'\n                break\n            case \"inputFtpPort\":\n                name = 'port'\n                break\n            case \"inputFtpUsername\":\n                name = 'username'\n                break\n            case \"inputFtpPassword\":\n                name = 'password'\n                break\n            case \"inputFtpPath\":\n                name = 'path'\n                break\n        }\n\n        this.props.handleSetConfiguration(name, value);\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP host</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputFtpHost\" onChange={this.handleFormEdit} value={this.props.formData.configuration.host} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP port</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"number\" class=\"form-control\" id=\"inputFtpPort\" onChange={this.handleFormEdit} value={this.props.formData.configuration.port} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP username</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputFtpUsername\" onChange={this.handleFormEdit} value={this.props.formData.configuration.username} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP password</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputFtpPassword\" onChange={this.handleFormEdit} value={this.props.formData.configuration.password} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP path</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputFtpPath\" onChange={this.handleFormEdit} value={this.props.formData.configuration.path} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Ftp","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport Filesystem from './configuration/filesystem';\nimport Webdav from './configuration/webdav';\nimport S3 from './configuration/S3';\nimport Ftp from './configuration/Ftp';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass IndexForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formData: {\n                \"extractMetadata\": true,\n                \"ignoreExtension\": [],\n                \"ignorePath\": [],\n                \"ignorePhrase\": [],\n                \"indexMode\": \"full\",\n                \"intervalUpdateMetadata\": 3600,\n                \"name\": \"\",\n                \"path\": [],\n                \"type\": '',\n                \"configuration\": {}\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n        this.handleSetConfiguration = this.handleSetConfiguration.bind(this)\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.name;\n        if (id !== undefined) {\n            fetch(`${API_URL}/index/get/${id}`)\n                .then(res => res.json())\n                .then((result) => {\n                    // result['oldname'] = result['name']\n                    this.setState({ formData: result })\n                });\n        }\n\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        fetch(`${API_URL}/index/set`, {\n                method: 'POST',\n                body: JSON.stringify(this.state.formData),\n                headers: { 'Content-Type': 'application/json' },\n            })\n            .then(response => {\n                // console.log(response)\n                window.location = \"/gui/index\"\n            })\n    }\n\n    handleSetConfiguration(k, v) {\n        let formData = this.state.formData\n        formData.configuration[k] = v\n        this.setState({ formData: formData })\n    }\n\n    handleFormEdit(event) {\n\n        if (event.type !== \"change\") {\n            return\n        }\n\n        let formData = this.state.formData\n\n        switch (event.target.id) {\n            case \"inputName\":\n                formData.name = event.target.value.replace(/[^a-z0-9\\-]+/gi, \"\")\n                break\n            case \"inputPath\":\n                formData.path = event.target.value.split(\",\")\n                break\n            case \"inputPathIgnore\":\n                formData.ignorePath = event.target.value.split(\",\")\n                break\n            case \"inputPhraseIgnore\":\n                formData.ignorePhrase = event.target.value.split(\",\")\n                break\n            case \"inputExtIgnore\":\n                formData.ignoreExtension = event.target.value.split(\",\")\n                break\n            case \"inputUpdateStructure\":\n                formData.intervalUpdateStructure = event.target.value.replace(/[^0-9]+/gi, \"\")\n                break\n            case \"inputExtractMetadata\":\n                formData.extractMetadata = event.target.checked\n                break\n            case \"indexType\":\n                formData.type = event.target.value\n                break\n            case \"inputIndexConfiguration\":\n                formData.configuration = event.target.value\n                break\n            case \"reindexStrategy\":\n                formData.reindexType = event.target.value\n                if (formData.reindexType == 'ON_DEMAND') {\n                    formData.intervalUpdateStructure = 0\n                } else {\n                    formData.intervalUpdateStructure = 3600\n                }\n                break\n        }\n\n        this.setState({ formData: formData })\n    }\n\n    render() {\n        let id = this.props.match.params.name\n        let formEditing = true\n        if (id === undefined) {\n            formEditing = false\n        }\n        let isReadonly = formEditing ? 'readOnly' : ''\n\n        let configComponent = null\n        if (this.state.formData.type == \"filesystem\") {\n            configComponent = <Filesystem formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        } else if (this.state.formData.type == \"webdav\") {\n            configComponent = <Webdav formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        } else if (this.state.formData.type == \"s3\") {\n            configComponent = <S3 formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        } else if (this.state.formData.type == \"ftp\") {\n            configComponent = <Ftp formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        }\n\n\n\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-10 offset-1\">\n                        <h1>{formEditing ? \"Edit\" : \"Create\"} index</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <div class=\"row mb-3\">\n                                <label for=\"inputName\" class=\"col-sm-3 col-form-label\">Index name</label>\n                                <div class=\"col-sm-5\">\n                                    <input readOnly={isReadonly} required value={this.state.formData.name} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputName\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    {/* <small class=\"text-muted\">Input desription</small> */}\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputIndexType\" class=\"col-sm-3 col-form-label\">Index type</label>\n                                <div class=\"col-sm-5\">\n                                    {/* <input value={this.state.formData.path.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPath\" /> */}\n                                    <select required onChange={this.handleFormEdit} class=\"form-select\" aria-label=\"Index type\" id=\"indexType\">\n                                        <option ></option>\n                                        <option selected={this.state.formData.type === 'filesystem' ? 'selected' : ''} value=\"filesystem\">Filesystem</option>\n                                        <option selected={this.state.formData.type === 's3' ? 'selected' : ''} value=\"s3\">S3</option>\n                                        <option selected={this.state.formData.type === 'webdav' ? 'selected' : ''} value=\"webdav\">WebDAV</option>\n                                        <option selected={this.state.formData.type === 'ftp' ? 'selected' : ''} value=\"ftp\">FTP</option>\n                                    </select>\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Storage backend for access to your files.</small>\n                                </div>\n                            </div>\n\n                            {configComponent}\n\n                            <h4>Filter settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPathIgnore\" class=\"col-sm-3 col-form-label\">Ignore path</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePath.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPathIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore paths from indexing separated by coma <br />eg. (/home/user/dir1/unwanted-path,/home/user/dir2/some/unwanted)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPhraseIgnore\" class=\"col-sm-3 col-form-label\">Ignore phrase</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePhrase.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPhraseIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file/directory paths with phrase separated by coma. You can use * to match more files/directories <br />eg. (.git,vendor,attr*)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtIgnore\" class=\"col-sm-3 col-form-label\">Ignore extensions</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignoreExtension.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputExtIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file extensions separated by coma <br />eg. (jpg,mp4,tmp)</small>\n                                </div>\n                            </div>\n\n\n                            <h4>Reindex settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputIndexType\" class=\"col-sm-3 col-form-label\">Reindex strategy</label>\n                                <div class=\"col-sm-5\">\n                                    <select required onChange={this.handleFormEdit} class=\"form-select\" aria-label=\"Reindex strategy\" id=\"reindexStrategy\">\n                                        <option selected={this.state.formData.type === 'RECURRING' ? 'selected' : ''} value=\"RECURRING\">Recurring</option>\n                                        <option selected={this.state.formData.type === 'ON_DEMAND' ? 'selected' : ''} value=\"ON_DEMAND\">On demand</option>\n                                    </select>\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Type of strategy for refresh your index.</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputUpdateStructure\" class=\"col-sm-3 col-form-label\">File structure interval</label>\n                                <div class=\"col-sm-5\">\n                                    <input readOnly={this.state.formData.reindexType == 'ON_DEMAND' ? true : false} value={this.state.formData.intervalUpdateStructure} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputUpdateStructure\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Refresh directory structure interval in seconds.</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtractMetadata\" class=\"col-sm-3 col-form-label\">Extract metadata from files</label>\n                                <div class=\"col-sm-5\">\n                                    <input onChange={this.handleFormEdit} checked={this.state.formData.extractMetadata} type=\"checkbox\" class=\"form-check-input\" id=\"inputExtractMetadata\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Enable this option when Filehunter should extract metadata/content from files and make it searchable</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-3 offset-6\">\n                                    <a href=\"/gui/index\" class=\"btn btn-link\">Cancel</a>\n                                    <button type=\"submit\" class=\"btn btn-primary float-right\" onClick={this.handleSubmit}>Save</button>\n                                </div>\n                            </div>\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(IndexForm)","import React from \"react\";\n\nclass EmptySearchResult extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col\">\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            Nothing to listing\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptySearchResult","import React from 'react';\n\nclass ItemBreadcrumb extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.handleOpenDirectory = this.handleOpenDirectory.bind(this)\n    }\n\n    handleOpenDirectory(e) {\n        e.preventDefault();\n\n        this.props.handleBrowse(e.target.attributes.path.value, this.props.index)\n        return false\n    }\n\n    render() {\n\n        let tmp = ['']\n        if (this.props.path != '/') {\n            tmp = this.props.path.split('/')\n        }\n        tmp = tmp.splice(1, tmp.length -2);\n\n        let pathElems = []\n        let fullPath = ''\n        let label = ''\n        for (let tmpIndex in tmp) {\n            if (tmp[tmpIndex] == '') {\n\n            } else {\n                fullPath += '/' + tmp[tmpIndex]\n                label = tmp[tmpIndex]\n            }\n\n\n            pathElems.push({ 'path': fullPath, 'label': label })\n        }\n\n        return (\n            \n            <span class=\"\"><br />\n            {pathElems.map(item => \n                        <small><a class=\"link-success nounderline\" href=\"#\" path={item.path} onClick={this.handleOpenDirectory.bind(this)}>/{item.label}</a></small>\n                    )}\n            \n            {/* <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    {pathElems.map(item => \n                    <li class=\"breadcrumb-item\">\n                        <a href=\"#\" path={item.path} onClick={this.handleOpenDirectory.bind(this)}>{item.label}</a>\n                    </li>\n                    )}\n                </ol>\n            </nav> */}\n            </span>\n        )\n    }\n}\n\nexport default ItemBreadcrumb","import React from 'react';\nimport ItemBreadcrumb from './ItemBreadcrumb';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass ItemFileRow extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.handleItemClick = this.handleItemClick.bind(this)\n  }\n\n  humanFileSize(bytes, si = true, dp = 2) {\n    const thresh = si ? 1000 : 1024;\n\n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n\n    const units = si\n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10 ** dp;\n\n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n  handleItemClick(ev) {\n    ev.preventDefault()\n    if (this.props.params.type === 'f' && this.props.params.indexstatus.status != 'ONLINE') {\n      return\n    }\n\n    if (this.props.params.type == 'f') {\n      window.open(`${API_URL}/download/file?path=${encodeURIComponent(this.props.params.path)}&index=${this.props.params.index}`)\n      // window.open(`${API_URL}/download/file?uid=${this.props.params.uid}`)\n    } else {\n      this.props.handleBrowse(this.props.params.path, this.props.params.index)\n    }\n  }\n\n  handleGetIconClass() {\n\n    if (this.props.params.type === 'd') {\n      return \"bi-folder2\"\n    }\n\n    let cls = {\n      'pdf': 'bi-file-earmark-pdf',\n      'zip': 'bi-file-earmark-zip',\n      'rar': 'bi-file-earmark-zip',\n      'gz': 'bi-file-earmark-zip',\n      '7z': 'bi-file-earmark-zip',\n      'tar': 'bi-file-earmark-zip',\n\n      'mp3': 'bi-file-earmark-music',\n      'flac': 'bi-file-earmark-music',\n      'wav': 'bi-file-earmark-music',\n\n      'png': 'bi-file-earmark-image',\n      'jpg': 'bi-file-earmark-image',\n      'jpeg': 'bi-file-earmark-image',\n      'tiff': 'bi-file-earmark-image',\n      'gif': 'bi-file-earmark-image',\n      'bmp': 'bi-file-earmark-image',\n\n      'ods': 'bi-file-earmark-excel',\n      'xls': 'bi-file-earmark-excel',\n      'xlsx': 'bi-file-earmark-excel',\n\n      'odt': 'bi-file-earmark-word',\n      'doc': 'bi-file-earmark-word',\n      'docx': 'bi-file-earmark-word',\n      'txt': 'bi-file-earmark-text',\n\n      'xml': 'bi-file-earmark-code',\n      'json': 'bi-file-earmark-code',\n      'c': 'bi-file-earmark-code',\n      'cpp': 'bi-file-earmark-code',\n      'php': 'bi-file-earmark-code',\n      'py': 'bi-file-earmark-code',\n      'rb': 'bi-file-earmark-code',\n      'java': 'bi-file-earmark-code',\n\n      'csv': 'bi-file-earmark-spreadsheet',\n    }\n    if (cls[this.props.params.ext.toLowerCase()] !== undefined) {\n      return cls[this.props.params.ext.toLowerCase()];\n    }\n    return \"bi-file-earmark\"\n  }\n\n  render() {\n    let iconclass = this.handleGetIconClass()\n\n\n    let itemBreadcrumb = null\n    if (this.props.searchResult === true) {\n      itemBreadcrumb = <div><ItemBreadcrumb index={this.props.params.index} path={this.props.params.path} handleBrowse={this.props.handleBrowse} /></div>\n    }\n\n    let fileSize = this.humanFileSize(this.props.params.size)\n    if (this.props.params.type === 'd') {\n      fileSize = ''\n    }\n    let linkClass = \"nounderline\"\n    if (this.props.params.type === 'f' && this.props.params.indexstatus.status != 'ONLINE') {\n      linkClass = \"nounderline text-muted\"\n    }\n\n    return (\n\n      <div class=\"list-group-item list-group-item-action\" data-bs-toggle=\"tooltip\" title={this.props.params.name}>\n        <a href=\"#\" onClick={this.handleItemClick} class={`${linkClass}`} aria-current=\"true\" >\n\n          <div class=\"d-flex w-100 justify-content-between\">\n\n\n            <h6 class=\"mb-1 text-truncate text-primary fw-normal align-middle\">\n              <i class={`bi ${iconclass} text-success me-1`} style={{ fontSize: '2rem' }}></i>\n              {this.props.params.name}\n            </h6>\n            <small class=\"text-success\">{this.props.params.index}</small>\n          </div>\n        </a>\n\n        <div class=\"float-end\">\n          <small class=\"text-end\">{fileSize} {this.props.params.lastModified}</small>\n        </div>\n        {itemBreadcrumb}\n      </div>\n\n    )\n  }\n\n}\n\nexport default ItemFileRow","import React from 'react'\n// const API_URL = process.env.REACT_APP_API_URL\n\nclass BrowseBreadcrumb extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n\n        this.handleClick = this.handleClick.bind(this)\n\n    }\n\n    handleClick(item) {\n        // e.preventDefault();\n\n        let pathToShow = item.target.attributes.path.value\n        if (pathToShow === '') {\n            pathToShow = '/'\n        }\n\n        this.props.handleBrowse(pathToShow, this.props.index)\n        return false\n    }\n\n    render() {\n\n        if (this.props.index === '-') {\n            return ''\n        }\n\n        let tmp = ['']\n        if (this.props.path !== '/') {\n            tmp = this.props.path.split('/')\n        }\n        \n\n        let pathElems = []\n        let fullPath = ''\n        let label = ''\n        for (let tmpIndex in tmp) {\n            if (tmp[tmpIndex] == '') {\n                fullPath = ''\n                label = <i class='fs-5 bi bi-house' path='/'></i>\n            } else {\n                fullPath += '/' + tmp[tmpIndex]\n                label = tmp[tmpIndex]\n            }\n            \n\n            pathElems.push({'path': fullPath, 'label': label})\n        }\n\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    {pathElems.map(item => <li class=\"fs-5 breadcrumb-item \"><a class=\"nounderline link-secondary\" href=\"#\" path={item.path} onClick={this.handleClick.bind(this)}>{item.label}</a></li> )} \n                </ol>\n            </nav>\n        )\n    }\n\n}\n\nexport default BrowseBreadcrumb","import React from \"react\";\n\nclass IndexList extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.handleBrowse = this.handleBrowse.bind(this)\n\n        // this.browseIndex = this.handleFormEdit.bind(this)\n    }\n\n    handleBrowse(path, index) {\n        this.props.handleBrowse(path, index)\n    }\n\n    render() {\n       let offlineBadge = <span class=\"badge rounded-pill bg-secondary\">Offline</span>\n\n        return (\n            <>\n                <h6 class=\"text-center\">Indexes</h6>\n                <div class=\"list-group list-group-flush\">\n                {this.props.availableIndexes.map(item => \n                            <a class=\"list-group-item list-group-item-action\" href=\"#\" path=\"/\" index={item.name} onClick={() => { this.handleBrowse('/', item.name) }}>\n                            <div class=\"d-flex w-100 justify-content-between\">\n                                <h6 class=\"mb-1\"><i class=\"bi bi-folder2\"></i> <span class=\"link-primary\">{item.name}</span></h6>\n                                <span class=\"badge bg-secondary rounded-pill\">{item.status !== 'ONLINE' ? 'offline' : ''}</span>\n                                </div>\n                            </a>\n                            \n                    )}\n                </div>\n     \n            </>\n        )\n\n    }\n}\n\nexport default IndexList","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass SearchAdvanced extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.indexList = []\n        this.indexName = \"\"\n        this.extension = \"\"\n        this.minmultiplier = 1024 * 1024\n        this.maxmultiplier = 1024 * 1024\n\n        this.filters = { minsize: 0, maxsize: 0 }\n        if (this.props.filters.length > 0) {\n            this.filters = this.props.filters\n        }\n\n        this.state = {\n            filters: this.filters\n        }\n\n    }\n\n    componentDidMount() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.indexList = result;\n                this.requestFinished = true\n                this.setState({ filters: this.filters })\n            });\n    }\n\n    handleAdvancedFilterChange(e) {\n\n        let k = e.target.name;\n        let v = e.target.value;\n\n        if (v.trim().length == 0) {\n            delete this.filters[k]\n        } else {\n            if (k === 'modified_after' || k === 'modified_before') {\n                v = Date.parse(v)\n            }\n\n            this.filters[k] = v;\n        }\n        if (k === \"maxsize\" && v != '0') {\n            this.filters[k] = parseInt(v) * this.maxmultiplier;\n        }\n        if (k === \"minsize\" && v != '0') {\n            this.filters[k] = parseInt(v) * this.minmultiplier;\n        }\n        let restoreMinSize = false \n        let restoreMaxSize = false\n        if (this.filters['maxsize'] == 0) {\n            delete this.filters['maxsize']\n            restoreMaxSize = true\n        }        \n        if (this.filters['minsize'] == 0) {\n            delete this.filters['minsize']\n            restoreMinSize = true\n        }\n\n        this.props.update(this.filters)\n        if (restoreMaxSize) {\n            this.filters['maxsize'] = 0\n        }\n        if (restoreMinSize) {\n            this.filters['minsize'] = 0\n        }\n        \n        this.setState({ filters: this.filters })\n    }\n\n    handleUiHelper(e) {\n\n        if (e.target.name === \"maxmultiplier\") {\n            this.maxmultiplier = parseInt(e.target.value)\n        }\n        if (e.target.name === \"minmultiplier\") {\n            this.minmultiplier = parseInt(e.target.value)\n        }\n\n        if (e.target.name === 'maxsizerange') {\n            this.filters['maxsize'] = parseInt(e.target.value) * this.maxmultiplier\n        }\n        if (e.target.name === 'minsizerange') {\n            this.filters['minsize'] = parseInt(e.target.value) * this.minmultiplier\n        }\n\n        this.props.update(this.filters)\n        this.setState({ filters: this.filters })\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"row mb-3\" id=\"\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"col-form-label\" for=\"selectIndexname\">Index</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n\n                        <select onChange={this.handleAdvancedFilterChange.bind(this)} name=\"indexname\" id=\"selectIndexname\" class=\"form-select form-select-sm\" aria-label=\"Index name\">\n                            <option></option>\n                            {this.indexList.map(item =>\n                                <option value={item.name}>{item.name}</option>\n                            )}\n                        </select>\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputExtension\">Extension</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputExtension\" name=\"ext\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"extension\" aria-describedby=\"extension\" />\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputFilename\">File name</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputFilename\" name=\"name\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"filename\" aria-describedby=\"filename\" />\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputPathname\">Path name</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputPathname\" name=\"path\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"path name\" aria-describedby=\"path name\" />\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputContent\">File contains</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputContent\" name=\"content\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"path name\" aria-describedby=\"path name\" />\n                    </div>\n\n                </div>                \n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputModified\">Modified between</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} name=\"modified_after\" type=\"date\" class=\"form-control form-control-sm\" aria-label=\"modified between\" aria-describedby=\"modified between\" />\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} name=\"modified_before\" type=\"date\" class=\"form-control form-control-sm\" aria-label=\"modified between\" aria-describedby=\"modified between\" />\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputMinimumsize\">Minimum size</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onTouchEnd={this.handleUiHelper.bind(this)} onMouseUp={this.handleUiHelper.bind(this)} name=\"minsizerange\" type=\"range\" min=\"0\" max=\"1024\" class=\"form-range\" aria-label=\"minimum size\" aria-describedby=\"minimum size\" />\n\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} value={this.state.filters.minsize / this.minmultiplier} id=\"inputMinimumsize\" name=\"minsize\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"minimum size\" aria-describedby=\"minimum size\" />\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <select class=\"form-select form-select-sm\" onChange={this.handleUiHelper.bind(this)} name=\"minmultiplier\">\n                            <option value=\"1\">B</option>\n                            <option value=\"1024\">KB</option>\n                            <option selected value=\"1048576\">MB</option>\n                            <option value=\"1073741824\">TB</option>\n                        </select>\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputMaximumsize\">Maximum size</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onTouchEnd={this.handleUiHelper.bind(this)} onMouseUp={this.handleUiHelper.bind(this)} name=\"maxsizerange\" type=\"range\" min=\"0\" max=\"1024\" class=\"form-range\" aria-label=\"maximum size\" aria-describedby=\"maximum size\" />\n\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} value={this.state.filters.maxsize / this.maxmultiplier} id=\"inputMaximumsize\" name=\"maxsize\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"maximum size\" aria-describedby=\"maximum size\" />\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <select class=\"form-select form-select-sm\" onChange={this.handleUiHelper.bind(this)} name=\"maxmultiplier\">\n                            <option value=\"1\">B</option>\n                            <option value=\"1024\">KB</option>\n                            <option selected value=\"1048576\">MB</option>\n                            <option value=\"1073741824\">TB</option>\n                        </select>\n                    </div>\n\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n\nexport default SearchAdvanced","import React from 'react';\n\nclass StartupPlaceholder extends React.Component {\n\n    render() {\n        return (\n            <div class=\"px-4 py-5 my-5 text-center\">\n                {/* <img class=\"d-block mx-auto mb-4\" src=\"/docs/5.0/assets/brand/bootstrap-logo.svg\" alt=\"\" width=\"72\" height=\"57\" /> */}\n                \n                    <h1 class=\"display-6 fw-bold\"><span class=\"badge bg-primary\">FH</span> File Hunter</h1>\n                    <div class=\"col-lg-6 mx-auto\">\n                        <p class=\"lead mb-4\">\n                        Simple, fast, open source file search engine<br /><br />\n                        </p>\n\n                        \n                        <div class=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        \n                            <a href=\"/gui/index/create\" class=\"btn btn-primary btn-lg px-4 gap-3\"><i class=\"bi bi-plus\"></i> Create new index</a>\n                        </div>\n                        <p class=\"text-muted fw-lighter\">Currently you don't have any indexes, add new one to search the files</p>\n                        \n                    </div>\n       \n            </div>\n                )\n            }\n        }\n        \nexport default StartupPlaceholder","import React from 'react'\nimport { start } from 'pretty-error';\n\nclass BrowserPagginator extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentPage: 0\n        };\n\n        this.setCurrentPage = this.setCurrentPage.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.props.setPagginatorPageState(() => {\n          this.setState({currentPage: 0})\n        })\n      }    \n\n    setCurrentPage(ev) {\n        ev.preventDefault()\n        let pageToShow = parseInt(ev.target.attributes.page.value)\n        this.props.setPage(pageToShow)\n        this.setState({currentPage: pageToShow})\n    }\n\n\n    render() {\n\n        let startPage = 0\n        let endPage = this.state.currentPage + 5\n        if (this.state.currentPage > 4) {\n            startPage = this.state.currentPage - 3\n        }\n        if (endPage > this.props.maxPage) {\n            endPage = this.props.maxPage\n        }\n\n\n        let pageLinks = []\n        if (this.state.currentPage > 0) {\n            pageLinks.push(<li class=\"page-item\"><a class=\"page-link\" href=\"#\" tabindex=\"-1\" onClick={this.setCurrentPage} aria-disabled=\"true\" page={this.state.currentPage - 1}>Previous</a></li>)\n        }\n\n        for (let i = startPage; i < endPage; i++) {\n            if (i == this.state.currentPage) {\n                pageLinks.push(<li class=\"page-item active\"><a class=\"page-link shadow-none\" href=\"#\" onClick={this.setCurrentPage} page={i}>{i+1}</a></li>)\n            } else {\n                pageLinks.push(<li class=\"page-item\"><a class=\"page-link shadow-none\" href=\"#\" onClick={this.setCurrentPage} page={i}>{i+1}</a></li>)\n            }\n        }\n\n        if (this.state.currentPage < this.props.maxPage) {\n            pageLinks.push(<li class=\"page-item\"><a class=\"page-link\" href=\"#\" tabindex=\"-1\" onClick={this.setCurrentPage} aria-disabled=\"true\" page={this.state.currentPage + 1}>Next</a></li>)\n        }\n\n        return (\n            <nav aria-label=\"Navigation\">\n                <ul class=\"pagination justify-content-center\">\n                        {pageLinks}\n                </ul>\n            </nav>\n        )\n    }\n}\n\nexport default BrowserPagginator","import React from 'react'\n\nclass Toast extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = { clicked: false }\n    }\n\n\n    render() {\n        return (\n            <div class=\"toast align-items-center text-white bg-danger border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-bs-autohide=\"true\">\n                <div class=\"d-flex\">\n                    <div class=\"toast-body\">\n                        {this.props.message}\n                    </div>\n                    <button type=\"button\" class=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Toast","import React from 'react';\nimport EmptySearchResult from './EmptySearchResult.js';\nimport ItemFileRow from './ItemFileRow';\nimport BrowseBreadcrumb from './BrowseBreadcrumb.js';\nimport IndexList from './IndexList.js';\nimport SearchAdvanced from './SearchAdvanced.js';\nimport StartupPlaceholder from './StartupPlaceholder.js';\nimport Toast from './Toast.js';\nimport BrowserPagginator from './BrowserPagginator.js';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass Browser extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            searchResultRows: [],\n            currentIndex: '-',\n            currentPath: '/',\n            availableIndexes: [],\n            currentBrowseList: [],\n            currentPage: 0,\n            perPage: 10,\n            maxPage: 1\n        };\n\n        this.filters = {}\n        this.currentQuery = ''\n        this.handleBrowse = this.handleBrowse.bind(this)\n        this.showItems = this.showItems.bind(this)\n        this.showSearchResult = this.showSearchResult.bind(this)\n        this.refreshIndexList = this.refreshIndexList.bind(this)\n        this.setPageNumber = this.setPageNumber.bind(this)\n        this.clearPagginatorPageNumber = this.clearPagginatorPageNumber.bind(this)\n        this.handleChangeFilters = this.handleChangeFilters.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshIndexList(true)\n\n        this.props.setItemRefresh(this.showSearchResult)\n        setInterval(() => {\n            this.refreshIndexList()\n        }, 30000)\n    }\n\n    setPageNumber(number) {\n        this.setState({ ...this.state, currentPage: number })\n        window.scrollTo(0, 0)\n    }\n\n    clearPagginatorPageNumber() {\n\n    }\n\n    refreshIndexList(openFirstResult = false) {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({ ...this.state, availableIndexes: result });\n                if (openFirstResult && result.length > 0) {\n                    this.handleBrowse('/', result[0].name)\n                }\n            });\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    presentItems(result, showItemsPath) {\n        let sr = []\n        let currentIndex = {}\n        this.state.availableIndexes.forEach(elem => {\n            currentIndex[elem['name']] = elem\n        })\n\n        result.map((item) => {\n            item['indexstatus'] = currentIndex[item['index']]\n            sr.push(\n                <ItemFileRow\n                    params={item}\n                    handleBrowse={this.handleBrowse}\n                    searchResult={showItemsPath}\n                />\n            )\n        })\n\n        if (sr.length === 0) {\n            sr.push(<EmptySearchResult />)\n        }\n        window.scrollTo(0, 0)\n        let maxPage = sr.length / this.state.perPage;\n\n        this.clearPagginatorPageNumber()\n        this.setState({ ...this.state, currentBrowseList: sr, maxPage: maxPage, currentPage: 0 })\n    }\n\n    showSearchResult(query) {\n        // console.log(query)\n        this.currentQuery = query\n        this.handleSearch()\n\n        // this.presentItems(result, true)\n        // this.setState({ ...this.state, currentIndex: '-', currentPath: '/' })\n    }\n    handleChangeFilters(filters) {\n        this.filters = filters;\n        this.handleSearch()\n    }\n\n    showItems(result) {\n\n        this.presentItems(result, false)\n        this.props.setNavbarInputClear()\n    }\n\n    handleBrowse(path, index) {\n\n        let queryBrowse = `${API_URL}/browse?path=${encodeURIComponent(path)}&index=${encodeURIComponent(index)}`\n\n        this.setState({ ...this.state, currentIndex: index, currentPath: path })\n\n        fetch(queryBrowse)\n            .then(res => res.json())\n            .then((result) => {\n                this.currentItems = result\n\n                this.showItems(result)\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleSearch() {\n\n        // let qs = \"\"\n        const qs = Object.keys(this.filters)\n            .map(key => `filter[${key}]=${this.filters[key]}`)\n            .join('&');\n\n        let queryWithAsterisk = ''\n        if (this.currentQuery.trim().length > 0) {\n            queryWithAsterisk = this.currentQuery.trim() + '*'\n        }\n\n        let queryTodo = `${API_URL}/search?q=${encodeURIComponent(queryWithAsterisk)}&${qs}`\n\n        this.activeQuery = true\n\n        fetch(queryTodo)\n            .then(res => res.json())\n            .then((result) => {\n                this.lastQuery = queryTodo;\n                setTimeout(() => this.activeQuery = false, 100);\n\n                // this.handleItemSearch(result)\n                this.presentItems(result, true)\n                this.setState({ ...this.state, currentIndex: '-', currentPath: '/' })\n\n                this.setState({})\n            })\n            .catch(err => {\n                // this.activeQuery = false\n                console.log(err)\n            })\n    }\n\n    render() {\n\n        if (this.state.availableIndexes.length == 0) {\n            return (<StartupPlaceholder />)\n        }\n        let pagginatorComponent = null\n        if (this.state.maxPage > 1) {\n            pagginatorComponent = <BrowserPagginator maxPage={this.state.maxPage} setPage={this.setPageNumber} setPagginatorPageState={fcn => this.clearPagginatorPageNumber = fcn} />\n        }\n\n        let filterButton = <button type=\"button\" class=\"btn btn-outline-secondary btn-sm d-inline\" data-bs-toggle=\"modal\" data-bs-target=\"#filterSearchResult\">\n            <i class=\"bi bi-filter\"></i>\n        </button>\n\n\n        return (\n            <>\n                <div class=\"container-fluid mt-5\" key=\"toastmsg\">\n\n\n                    <div class=\"row\">\n\n                        <div class=\"col-2 d-none d-lg-block\">\n                            <IndexList handleBrowse={this.handleBrowse} availableIndexes={this.state.availableIndexes} />\n                        </div>\n                        <div class=\"col-lg-10 col-md-12\">\n\n                            <div class=\"row align-middle\">\n                                <div class=\"col-auto me-auto\">\n                                    <BrowseBreadcrumb index={this.state.currentIndex} path={this.state.currentPath} handleBrowse={this.handleBrowse} />\n                                </div>\n                                <div class=\"col-auto\">\n                                    <a href=\"#\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#indexListDrawer\" class=\"btn btn-sm btn-outline-secondary d-inline d-lg-none\"><i class=\"bi bi-folder2\"></i></a>\n                                    {filterButton}\n                                </div>\n\n                            </div>\n\n                            <div class=\"list-group list-group-flush\">\n                                {this.state.currentBrowseList.slice(this.state.currentPage * this.state.perPage, (this.state.currentPage * this.state.perPage) + this.state.perPage)}\n                            </div>\n                            {pagginatorComponent}\n                        </div>\n\n\n                    </div>\n\n                    <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"indexListDrawer\" aria-labelledby=\"Index list\">\n                        <div class=\"offcanvas-header\">\n                            <h5 id=\"offcanvasRightLabel\"></h5>\n                            <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"offcanvas-body\">\n                            <IndexList handleBrowse={this.handleBrowse} availableIndexes={this.state.availableIndexes} />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class=\"modal fade\" id=\"filterSearchResult\" tabindex=\"-1\" aria-labelledby=\"filterSearchResultLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"filterSearchResultLabel\">Filter search result</h5>\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <SearchAdvanced filters={this.filters} update={this.handleChangeFilters} />\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n}\n\nexport default Browser","import './App.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Navbar from './Navbar.js';\nimport IndexInfo from './IndexInfo';\nimport IndexForm from './IndexForm';\nimport Browser from './Browser';\n\nclass App extends React.Component {\n\n\n\n  constructor(props) {\n    super(props)\n\n    this.handleItemsRefreshFromBrowser = this.handleItemsRefreshFromBrowser.bind(this)\n    this.handleItemRefreshFromNavbar = this.handleItemRefreshFromNavbar.bind(this)\n\n    this.hadnleClearNavbarInputQuery = this.hadnleClearNavbarInputQuery.bind(this)\n    this.callbackNavbarClearQuery = this.callbackNavbarClearQuery.bind(this)\n  }\n\n  handleItemRefreshFromNavbar(query) {\n    this.handleItemsRefreshFromBrowser(query)\n  }\n\n  handleItemsRefreshFromBrowser() { }\n\n\n  hadnleClearNavbarInputQuery() {\n    this.callbackNavbarClearQuery()\n  }\n\n  callbackNavbarClearQuery() { }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <div>\n            <header>\n              <Navbar setCallbackClearInputQuery={fcn => this.callbackNavbarClearQuery = fcn} handleItemSearch={this.handleItemRefreshFromNavbar} />\n            </header>\n            <main class=\"flex-shrink-2\">\n\n              <Route exact path=\"/\">\n                <Redirect to=\"/gui/\" />\n              </Route>\n              <Route exact path=\"/gui/\">\n                <Browser setNavbarInputClear={this.hadnleClearNavbarInputQuery} setItemRefresh={fcn => this.handleItemsRefreshFromBrowser = fcn} />\n              </Route>\n              <Route exact path=\"/gui/index\">\n                <IndexInfo />\n              </Route>\n              <Route path=\"/gui/index/edit/:name\">\n                <IndexForm />\n              </Route>\n              <Route path=\"/gui/index/create\">\n                <IndexForm />\n              </Route>\n            </main>\n          </div>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
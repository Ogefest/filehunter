{"version":3,"sources":["ReindexState.js","Navbar.js","SearchResultRow.js","EmptySearchResult.js","Searchform.js","DirectoryInfo.js","DirectoryForm.js","App.js","reportWebVitals.js","index.js"],"names":["ReindexState","props","state","clicked","handleClick","bind","this","fetch","process","method","headers","then","response","setState","console","log","class","href","onClick","React","Component","Navbar","type","id","rel","target","SearchResultRow","iconclass","params","uuid","name","path","EmptySearchResult","align","SearchForm","value","searchResultRows","sr","lastQuery","currentQuery","activeQuery","searchTimeout","clearInterval","intervalId","encodeURIComponent","res","json","result","map","item","push","length","e","clearTimeout","setTimeout","handleSearch","autoFocus","placeholder","onChange","handleInputChange","DirectoryInfo","handleRemove","refreshList","row","window","confirm","directoryRow","pathRow","ignorePath","ignorePhrase","ignoreExtension","Date","lastStructureIndexed","toLocaleDateString","toLocaleTimeString","DirectoryForm","formData","handleSubmit","handleFormEdit","match","undefined","event","preventDefault","body","JSON","stringify","location","replace","split","formEditing","onSubmit","for","join","withRouter","App","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b8911ee.chunk.js","sourcesContent":["import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass ReindexState extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = { clicked: false }\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n\n        if (this.state.clicked == true) {\n            return\n        }\n\n        fetch(`${API_URL}/directory/reindex`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                this.setState({ clicked: true })\n            })\n\n        return false\n    }\n\n    render() {\n        console.log(this.state.clicked)\n\n        return (\n            <button class=\"btn btn-sm btn-success\" href=\"#\" onClick={this.handleClick}><i class=\"bi bi-arrow-repeat\"></i> Reindex</button>\n        )\n    }\n\n}\n\nexport default ReindexState","import React from 'react';\nimport ReindexState from './ReindexState';\nimport { Link, BrowserRouter } from 'react-router-dom';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav class=\"navbar navbar-expand-lg navbar-light\" >\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"/\">Filehunter</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav mx-auto mb-2 mb-lg-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" aria-current=\"page\" href=\"/\"><i class=\"bi bi-search\"></i> Search</a>\n              </li>\n              <li class=\"nav-item\">\n                <a href=\"/gui/directory\" class=\"nav-link menu-item nav-active\"><i class=\"bi bi-folder2-open\"></i> Directories</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href={`${API_URL}/api-doc`} target=\"_blank\" class=\"nav-link menu-item\"><i class=\"bi bi-code-slash\"></i> API Doc</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href=\"https://github.com/Ogefest/filehunter\" target=\"_blank\" class=\"nav-link  menu-item\"><i class=\"bi bi-github\"></i> Github</a>\n              </li>\n\n              {/* <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Dropdown\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                  <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                  <li><hr class=\"dropdown-divider\" /></li>\n                  <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                </ul>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Link</a>\n              </li> */}\n            </ul>\n            <ReindexState />\n          </div>\n        </div>\n      </nav>\n\n    )\n  }\n}\n\nexport default Navbar;","import React from 'react';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass SearchResultRow extends React.Component {\n\n    render() {\n        let iconclass = \"bi-file-earmark\"\n        // console.log(this.props.params)\n        if (this.props.params.type === 'd') {\n            iconclass = \"bi-folder2\"\n        }\n\n        return (\n            <div class=\"row mb-3\" key={this.props.params.uuid}>\n                <div class=\"col-8 offset-3\">\n                    {/* <h5>{this.props.params.name}</h5> */}\n                    <h5>\n                    <i class={`bi ${iconclass}`}></i> <a rel=\"noreferrer\" target=\"_blank\" href={`${API_URL}/download/${this.props.params.uuid}`}>{this.props.params.name}</a>\n                    </h5>\n                    <small class=\"text-success\">{this.props.params.path}</small>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nexport default SearchResultRow","import React  from \"react\";\n\nclass EmptySearchResult extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container\">\n            <div class=\"row\" key=\"empty-results\">\n            <div class=\"col-4 offset-4\">\n                    \n\n                    <div class=\"alert alert-danger col-md-12 col-md-offset-12\" align=\"center\">\nEmpty search results\n</div>\n\n                </div>\n            </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptySearchResult","import React from 'react';\nimport SearchResultRow from './SearchResultRow.js'\nimport EmptySearchResult from './EmptySearchResult.js';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass SearchForm extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {      \n            value: null,\n            searchResultRows: []\n        };\n        this.sr = []\n        this.lastQuery = \"\"\n        this.currentQuery = \"\"\n        this.activeQuery = false\n        this.searchTimeout = null\n\n      }\n\n      componentDidMount() {\n        //   this.intervalId = setInterval(this.handleSearch.bind(this), 500);\n      }\n      componentWillUnmount(){\n        clearInterval(this.intervalId);\n      }      \n\n\n    handleSearch() {\n\n        if (this.currentQuery === \"\" || this.currentQuery === this.lastQuery) {\n            return;\n        }\n        if (this.activeQuery === true) {\n            return;\n        }\n        this.activeQuery = true\n\n        fetch(`${API_URL}/search?q=${encodeURIComponent(this.currentQuery)}`)\n            .then(res => res.json())\n            .then( (result) => {\n                this.lastQuery = this.currentQuery\n                this.activeQuery = false;\n                \n                this.sr = []\n                result.map((item) => (\n                    this.sr.push(<SearchResultRow params={item}/>)\n                ))\n                if (this.sr.length === 0) {\n                    this.sr.push(<EmptySearchResult />)\n                }\n\n                \n                this.setState({searchResultRows: this.sr});\n            } );\n    }\n\n    handleInputChange(e) {\n        this.currentQuery = e.target.value\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout)\n        }\n        this.searchTimeout = setTimeout(this.handleSearch.bind(this), 300);\n    }\n\n    render() {\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-6 offset-3\">\n                        <div class=\"input-group mb-3\">\n                            <input autoFocus type=\"text\" class=\"form-control\" placeholder=\"Search for files\" aria-label=\"Search for files\" aria-describedby=\"button-addon2\" onChange={this.handleInputChange.bind(this)} />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    {this.state.searchResultRows}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchForm","import React from 'react';\nimport ReindexState from './ReindexState';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass DirectoryInfo extends React.Component {\n\n    // const history = useHistory()\n\n    constructor(props) {\n        super(props)\n\n        this.result = []\n\n        this.handleRemove = this.handleRemove.bind(this)\n\n    }\n\n    componentDidMount() {\n        this.refreshList()\n\n    }\n\n    refreshList() {\n        fetch(`${API_URL}/directory/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n                this.setState({});\n            });\n    }\n\n\n    handleRemove(row) {\n        if (window.confirm(\"Are you sure?\")) {\n\n            fetch(`${API_URL}/directory/remove/${row.name}`, {\n                method: 'DELETE',\n                headers: { 'Content-Type': 'application/json' },            \n            })\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n                this.setState({});\n            });      \n        }\n        return false\n    }\n\n    render() {\n\n        return (\n            \n            <div class=\"container mt-5\">\n            <div class=\"row\">\n                <div class=\"col-10 offset-1\">\n                    <h3>List of directories <a href=\"/gui/directory/create\" class=\"btn btn-success btn-sm\"><i class=\"bi bi-plus\"></i> New</a> <ReindexState /></h3>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Paths</th>\n                                <th>Ignore</th>\n                                <th>Last indexed</th>\n                                <th>&nbsp;</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.result.map(directoryRow => (\n                                <tr>\n                                    <td><i class=\"bi bi-folder2-open\"></i> {directoryRow.name}</td>\n                                    <td>\n                                        {directoryRow.path.map(pathRow => (\n                                            <small class=\"badge bg-primary ms-1\">{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    <td>\n                                    {directoryRow.ignorePath.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">{pathRow}</small>\n                                        ))}\n                                    {directoryRow.ignorePhrase.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*{pathRow}*</small>\n                                        ))}                                        \n                                    {directoryRow.ignoreExtension.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*.{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    <td>\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleDateString()}\n                                        &nbsp;\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleTimeString()}\n                                    </td>\n\n                                    <td>\n                                        <a href={`/gui/directory/edit/${directoryRow.name}`} class=\"btn btn-light btn-sm me-1\"><i class=\"bi bi-pencil\"></i></a>\n                                        <a  onClick={() => this.handleRemove(directoryRow)} href=\"#\" class=\"btn btn-danger btn-sm me-1\"><i class=\"bi bi-trash\"></i></a>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default DirectoryInfo","import React from 'react';\nimport { withRouter } from \"react-router\";\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass DirectoryForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formData: {\n                \"extractMetadata\": true,\n                \"hashSize\": 0,\n                \"ignoreExtension\": [],\n                \"ignorePath\": [],\n                \"ignorePhrase\": [],\n                \"indexMode\": \"full\",\n                \"intervalUpdateMetadata\": 3600,\n                \"intervalUpdateStructure\": 7200,\n                \"maxDepth\": 20,\n                \"name\": \"\",\n                \"path\": []\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.name;\n        if (id != undefined) {\n            fetch(`${API_URL}/directory/get/${id}`)\n                .then(res => res.json())\n                .then((result) => {\n                    this.setState({ formData: result });\n                });\n        }\n\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        fetch(`${API_URL}/directory/set`, {\n            method: 'POST',\n            body: JSON.stringify(this.state.formData),\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                console.log(response)\n                window.location = \"/gui/directory\"\n            })\n    }\n\n    handleFormEdit(event) {\n\n        if (event.type !== \"change\") {\n            return\n        }\n\n        let formData = this.state.formData\n\n        switch (event.target.id) {\n            case \"inputName\":\n                formData.name = event.target.value.replace(/[^a-z0-9\\-]+/gi, \"\")\n                break\n            case \"inputPath\":\n                formData.path = event.target.value.split(\",\")\n                break\n            case \"inputPathIgnore\":\n                formData.ignorePath = event.target.value.split(\",\")\n                break\n            case \"inputPhraseIgnore\":\n                formData.ignorePhrase = event.target.value.split(\",\")\n                break\n            case \"inputExtIgnore\":\n                formData.ignoreExtension = event.target.value.split(\",\")\n                break\n        }\n\n        this.setState({ formData: formData })\n    }\n\n    render() {\n        let id = this.props.match.params.name\n        let formEditing = true\n        if (id === undefined) {\n            formEditing = false\n        }\n\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-10 offset-1\">\n                        <h3>{formEditing ? \"Edit\" : \"Create\"} directory</h3>\n                        <form onSubmit={this.handleSubmit}>\n                            <div class=\"row mb-3\">\n                                <label for=\"inputName\" class=\"col-sm-3 col-form-label\">Index name</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.name} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputName\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    {/* <small class=\"text-muted\">Input desription</small> */}\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">Path to index</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.path.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPath\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Full path to index, you can add here multiple paths separate them with coma <br />eg. (/home/user/dir1,/home/user/dir2)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPathIgnore\" class=\"col-sm-3 col-form-label\">Ignore path</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePath.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPathIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore paths from indexing separated by coma <br />eg. (/home/user/dir1/unwanted-path,/home/user/dir2/some/unwanted)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPhraseIgnore\" class=\"col-sm-3 col-form-label\">Ignore phrase</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePhrase.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPhraseIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file/directory paths with phrase separated by coma. You can use * to match more files/directories <br />eg. (.git,vendor,attr*)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtIgnore\" class=\"col-sm-3 col-form-label\">Ignore extensions</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignoreExtension.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputExtIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file extensions separated by coma <br />eg. (jpg,mp4,tmp)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-3 offset-6\">\n                                    <a href=\"/gui/directory\" class=\"btn btn-link\">Cancel</a>\n                                    <button type=\"submit\" class=\"btn btn-primary float-right\">Save</button>\n                                </div>\n                            </div>\n\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(DirectoryForm)","import './App.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Navbar from './Navbar.js';\nimport SearchForm from './Searchform.js';\nimport DirectoryInfo from './DirectoryInfo';\nimport DirectoryForm from './DirectoryForm';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <Navbar />\n      </header>\n      <main class=\"flex-shrink-2\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/gui/\" />\n            </Route>\n            <Route exact path=\"/gui/\">\n              <SearchForm />\n            </Route>\n            <Route exact path=\"/gui/directory\">\n              <DirectoryInfo />\n            </Route>\n            <Route path=\"/gui/directory/edit/:name\">\n              <DirectoryForm />\n            </Route>\n            <Route path=\"/gui/directory/create\">\n              <DirectoryForm />\n            </Route>\n          </Switch>\n\n        </BrowserRouter>\n      \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["SearchAdvanced.js","SystemTaskStatus.js","Navbar.js","ReindexState.js","EmptyIndexList.js","IndexInfo.js","configuration/filesystem.js","configuration/webdav.js","configuration/S3.js","configuration/Ftp.js","IndexForm.js","EmptySearchResult.js","ItemBreadcrumb.js","ItemFileRow.js","BrowseBreadcrumb.js","IndexList.js","StartupPlaceholder.js","Browser.js","App.js","reportWebVitals.js","index.js"],"names":["SearchAdvanced","React","Component","props","indexList","indexName","extension","minmultiplier","maxmultiplier","filters","minsize","maxsize","length","state","fetch","process","then","res","json","result","requestFinished","setState","e","k","target","name","v","value","trim","this","Date","parse","parseInt","restoreMinSize","restoreMaxSize","update","class","id","for","onChange","handleAdvancedFilterChange","bind","map","item","type","onTouchEnd","handleUiHelper","onMouseUp","min","max","selected","Navbar","currentQuery","currentInputQueryValue","inputQueryRef","createRef","handleChangeInput","handleItemSearch","queryBackend","handleChangeFilters","setCallbackClearInputQuery","current","ev","history","location","pathname","push","activeQuery","updateQueryWhenActive","clearInterval","setTimeout","qs","Object","keys","key","join","queryWithAsterisk","queryTodo","encodeURIComponent","lastQuery","catch","err","console","log","filterButton","className","to","ref","placeholder","rel","href","tabindex","withRouter","ReindexState","clicked","handleClick","indextype","method","headers","response","title","onClick","EmptyIndexList","align","IndexInfo","handleRemove","refreshList","setInterval","row","window","confirm","directoryRow","status","ignorePath","pathRow","ignorePhrase","ignoreExtension","lastStructureIndexed","toLocaleDateString","toLocaleTimeString","Filesystem","handleFormEdit","handleSetConfiguration","formData","configuration","path","Webdav","url","username","password","S3","endpoint","region","bucket","accesskey","secretkey","Ftp","host","port","IndexForm","handleSubmit","match","params","undefined","event","preventDefault","body","JSON","stringify","replace","split","intervalUpdateStructure","extractMetadata","checked","reindexType","formEditing","isReadonly","configComponent","onSubmit","readOnly","required","EmptySearchResult","ItemBreadcrumb","handleOpenDirectory","handleBrowse","attributes","index","tmp","splice","pathElems","fullPath","label","tmpIndex","ItemFileRow","handleItemClick","bytes","si","dp","thresh","Math","abs","units","u","r","round","toFixed","open","iconclass","itemBreadcrumb","searchResult","fileSize","humanFileSize","size","indexstatus","style","fontSize","color","lastModified","BrowseBreadcrumb","pathToShow","IndexList","availableIndexes","StartupPlaceholder","Browser","searchResultRows","currentIndex","currentPath","currentBrowseList","showItems","showSearchResult","refreshIndexList","setItemRefresh","openFirstResult","showItemsPath","sr","forEach","elem","scrollTo","presentItems","setNavbarInputClear","queryBrowse","currentItems","App","handleItemsRefreshFromBrowser","handleItemRefreshFromNavbar","hadnleClearNavbarInputQuery","callbackNavbarClearQuery","items","fcn","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f21ad5d.chunk.js","sourcesContent":["import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass SearchAdvanced extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.indexList = []\n        this.indexName = \"\"\n        this.extension = \"\"\n        this.minmultiplier = 1024 * 1024\n        this.maxmultiplier = 1024 * 1024\n\n        this.filters = { minsize: 0, maxsize: 0 }\n        if (this.props.filters.length > 0) {\n            this.filters = this.props.filters\n        }\n\n        this.state = {\n            filters: this.filters\n        }\n\n    }\n\n    componentDidMount() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.indexList = result;\n                this.requestFinished = true\n                this.setState({ filters: this.filters })\n            });\n    }\n\n    handleAdvancedFilterChange(e) {\n\n        let k = e.target.name;\n        let v = e.target.value;\n\n        if (v.trim().length == 0) {\n            delete this.filters[k]\n        } else {\n            if (k === 'modified_after' || k === 'modified_before') {\n                v = Date.parse(v)\n            }\n\n            this.filters[k] = v;\n        }\n        if (k === \"maxsize\" && v != '0') {\n            this.filters[k] = parseInt(v) * this.maxmultiplier;\n        }\n        if (k === \"minsize\" && v != '0') {\n            this.filters[k] = parseInt(v) * this.minmultiplier;\n        }\n        let restoreMinSize = false \n        let restoreMaxSize = false\n        if (this.filters['maxsize'] == 0) {\n            delete this.filters['maxsize']\n            restoreMaxSize = true\n        }        \n        if (this.filters['minsize'] == 0) {\n            delete this.filters['minsize']\n            restoreMinSize = true\n        }\n\n        this.props.update(this.filters)\n        if (restoreMaxSize) {\n            this.filters['maxsize'] = 0\n        }\n        if (restoreMinSize) {\n            this.filters['minsize'] = 0\n        }\n        \n        this.setState({ filters: this.filters })\n    }\n\n    handleUiHelper(e) {\n\n        if (e.target.name === \"maxmultiplier\") {\n            this.maxmultiplier = parseInt(e.target.value)\n        }\n        if (e.target.name === \"minmultiplier\") {\n            this.minmultiplier = parseInt(e.target.value)\n        }\n\n        if (e.target.name === 'maxsizerange') {\n            this.filters['maxsize'] = parseInt(e.target.value) * this.maxmultiplier\n        }\n        if (e.target.name === 'minsizerange') {\n            this.filters['minsize'] = parseInt(e.target.value) * this.minmultiplier\n        }\n\n        this.props.update(this.filters)\n        this.setState({ filters: this.filters })\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"row mb-3\" id=\"\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"col-form-label\" for=\"selectIndexname\">Index</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n\n                        <select onChange={this.handleAdvancedFilterChange.bind(this)} name=\"indexname\" id=\"selectIndexname\" class=\"form-select form-select-sm\" aria-label=\"Index name\">\n                            <option></option>\n                            {this.indexList.map(item =>\n                                <option value={item.name}>{item.name}</option>\n                            )}\n                        </select>\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputExtension\">Extension</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputExtension\" name=\"ext\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"extension\" aria-describedby=\"extension\" />\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputFilename\">File name</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputFilename\" name=\"name\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"filename\" aria-describedby=\"filename\" />\n                    </div>\n\n                </div>\n\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputPathname\">Path name</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputPathname\" name=\"path\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"path name\" aria-describedby=\"path name\" />\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputContent\">File contains</label>\n                    </div>\n                    <div class=\"col-md-6 col-lg-8\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} id=\"inputContent\" name=\"content\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"path name\" aria-describedby=\"path name\" />\n                    </div>\n\n                </div>                \n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputModified\">Modified between</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} name=\"modified_after\" type=\"date\" class=\"form-control form-control-sm\" aria-label=\"modified between\" aria-describedby=\"modified between\" />\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} name=\"modified_before\" type=\"date\" class=\"form-control form-control-sm\" aria-label=\"modified between\" aria-describedby=\"modified between\" />\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputMinimumsize\">Minimum size</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onTouchEnd={this.handleUiHelper.bind(this)} onMouseUp={this.handleUiHelper.bind(this)} name=\"minsizerange\" type=\"range\" min=\"0\" max=\"1024\" class=\"form-range\" aria-label=\"minimum size\" aria-describedby=\"minimum size\" />\n\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} value={this.state.filters.minsize / this.minmultiplier} id=\"inputMinimumsize\" name=\"minsize\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"minimum size\" aria-describedby=\"minimum size\" />\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <select class=\"form-select form-select-sm\" onChange={this.handleUiHelper.bind(this)} name=\"minmultiplier\">\n                            <option value=\"1\">B</option>\n                            <option value=\"1024\">KB</option>\n                            <option selected value=\"1048576\">MB</option>\n                            <option value=\"1073741824\">TB</option>\n                        </select>\n                    </div>\n\n                </div>\n\n                <div class=\"row mb-3\">\n\n                    <div class=\"col-md-6 col-lg-4 text-lg-end text-md-end\">\n                        <label class=\"\" for=\"inputMaximumsize\">Maximum size</label>\n                    </div>\n                    <div class=\"col-md-3 col-lg-4\">\n                        <input onTouchEnd={this.handleUiHelper.bind(this)} onMouseUp={this.handleUiHelper.bind(this)} name=\"maxsizerange\" type=\"range\" min=\"0\" max=\"1024\" class=\"form-range\" aria-label=\"maximum size\" aria-describedby=\"maximum size\" />\n\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <input onChange={this.handleAdvancedFilterChange.bind(this)} value={this.state.filters.maxsize / this.maxmultiplier} id=\"inputMaximumsize\" name=\"maxsize\" type=\"text\" class=\"form-control form-control-sm\" aria-label=\"maximum size\" aria-describedby=\"maximum size\" />\n                    </div>\n                    <div class=\"col-md-2 col-lg-2\">\n                        <select class=\"form-select form-select-sm\" onChange={this.handleUiHelper.bind(this)} name=\"maxmultiplier\">\n                            <option value=\"1\">B</option>\n                            <option value=\"1024\">KB</option>\n                            <option selected value=\"1048576\">MB</option>\n                            <option value=\"1073741824\">TB</option>\n                        </select>\n                    </div>\n\n                </div>\n\n\n            </div>\n\n        )\n    }\n}\n\nexport default SearchAdvanced","import React from 'react';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass SystemTaskStatus extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.refreshInterval = 10000\n        this.refreshStatus = this.refreshStatus.bind(this)\n    }   \n    \n    componentDidMount() {\n        this.refreshStatus()\n    }\n\n    refreshStatus() {\n        fetch(`${API_URL}/system/status`)\n            .then(res => res.json())\n            .then((result) => {\n                this.result = result;\n\n                setTimeout(this.refreshStatus, this.refreshInterval)\n                this.setState({});\n            });\n    }\n\n    render() {\n\n        if (this.result === undefined) {\n            return(\"\")\n        }\n        if (this.result.currentTask !== \"\") {\n            this.refreshInterval = 1000\n        } else {\n            this.refreshInterval = 10000\n            return(\"\")\n        }\n\n        return(\n            <span class=\"badge bg-success\">Task {this.result.currentTask}</span>\n        )\n    }\n}\n\nexport default SystemTaskStatus","import React from 'react';\nimport SystemTaskStatus from './SystemTaskStatus';\nimport SearchAdvanced from './SearchAdvanced.js';\n// import { useHistory } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass Navbar extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.filters = {}\n    this.currentQuery = ''\n    this.currentInputQueryValue = ''\n\n    this.inputQueryRef = React.createRef();\n\n    this.handleChangeInput = this.handleChangeInput.bind(this)\n    this.handleItemSearch = this.props.handleItemSearch.bind(this)\n    this.queryBackend = this.queryBackend.bind(this)\n    this.handleChangeFilters = this.handleChangeFilters.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.setCallbackClearInputQuery(() => {\n      this.inputQueryRef.current.value = ''\n\n      this.currentQuery = ''\n      this.setState({})\n    })\n  }\n\n  handleChangeInput(ev) {\n    if (this.props.history.location.pathname != '/gui/') {\n      this.props.history.push('/gui/')\n    }\n\n    this.currentQuery = ev.target.value\n    if (this.currentQuery.trim().length == 0) {\n      this.filters = {}\n    }\n\n    if (this.activeQuery === true) {\n      if (this.updateQueryWhenActive !== null) {\n        clearInterval(this.updateQueryWhenActive)\n      }\n      this.updateQueryWhenActive = setTimeout(this.queryBackend(), 500)\n      return\n    }\n\n    this.queryBackend()\n  }\n\n  handleChangeFilters(filters) {\n    this.filters = filters;\n    this.queryBackend()\n  }\n\n  queryBackend() {\n\n    // let qs = \"\"\n    const qs = Object.keys(this.filters)\n      .map(key => `filter[${key}]=${this.filters[key]}`)\n      .join('&');\n\n    let queryWithAsterisk = ''\n    if (this.currentQuery.trim().length > 0) {\n      queryWithAsterisk = this.currentQuery.trim() + '*'\n    }\n\n    let queryTodo = `${API_URL}/search?q=${encodeURIComponent(queryWithAsterisk)}&${qs}`\n\n    this.activeQuery = true\n\n    fetch(queryTodo)\n      .then(res => res.json())\n      .then((result) => {\n        this.lastQuery = queryTodo;\n        setTimeout(() => this.activeQuery = false, 100);\n\n        this.handleItemSearch(result)\n\n        this.setState({})\n      })\n      .catch(err => {\n        // this.activeQuery = false\n        console.log(err)\n      })\n  }\n\n\n  render() {\n\n    let filterButton = null\n    // console.log(this.currentQuery)\n    if (this.currentQuery.trim().length > 0) {\n      filterButton = <button type=\"button\" class=\"btn btn-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#filterSearchResult\">\n        <i class=\"bi bi-filter\"></i>\n      </button>\n    }\n\n    return (\n      <>\n\n      <nav class=\"navbar navbar-expand-lg navbar-light fixed-top bg-light\" >\n        <div class=\"container-fluid\">\n          <span class=\"badge bg-primary\">FH</span> <Link className=\"navbar-brand\" to=\"/gui/\">FileHunter</Link>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n            <form class=\"d-flex flex-grow-1 me-5 ms-5\">\n              <input ref={this.inputQueryRef} onChange={this.handleChangeInput} class=\"form-control me-3\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n              {filterButton}\n            </form>\n\n\n            <ul class=\"navbar-nav ms-auto mb-1 mb-lg-0\">\n              <li class=\"nav-item\">\n                <Link className=\"nav-link menu-item nav-active\" to=\"/gui/index\"><i class=\"bi bi-folder2-open\"></i> Indexes</Link>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href={`${API_URL}/api-doc`} target=\"_blank\" class=\"nav-link menu-item\"><i class=\"bi bi-code-slash\"></i> API Doc</a>\n              </li>\n              <li class=\"nav-item\">\n                <a rel=\"noreferrer\" href=\"https://github.com/Ogefest/filehunter\" target=\"_blank\" class=\"nav-link  menu-item\"><i class=\"bi bi-github\"></i> Github</a>\n              </li>\n\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"modal fade\" id=\"filterSearchResult\" tabindex=\"-1\" aria-labelledby=\"filterSearchResultLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-lg\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"filterSearchResultLabel\">Filter search result</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n              <div class=\"modal-body\">\n                <SearchAdvanced filters={this.filters} update={this.handleChangeFilters} />\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <br />\n      </>\n    )\n  }\n}\n\nexport default withRouter(Navbar);","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass ReindexState extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = { clicked: false }\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n\n        if (this.state.clicked === true) {\n            return\n        }\n\n        fetch(`${API_URL}/index/reindex/${this.props.indextype}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                this.setState({ clicked: true })\n            })\n\n        return false\n    }\n\n    render() {\n        // console.log(this.state.clicked)\n\n        return (\n            <button data-placement=\"top\" title=\"Reindex\" class=\"btn btn-sm btn-success\" href=\"#\" onClick={this.handleClick}><i class=\"bi bi-arrow-repeat\"></i></button>\n        )\n    }\n\n}\n\nexport default ReindexState","import React from \"react\";\n\nclass EmptyIndexList extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container mt-5\">\n\n\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col-6 offset-3\">\n\n\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            You have no indexed directories. Click button below to add directory.\n                        </div>\n\n                        <div align=\"center\">\n                        <a href=\"/gui/index/create\" class=\"btn btn-lg btn-primary\"><i class=\"bi bi-plus\"></i> Create new index</a>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptyIndexList","import React from 'react';\nimport ReindexState from './ReindexState';\nimport EmptyIndexList from './EmptyIndexList';\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass IndexInfo extends React.Component {\n\n    // const history = useHistory()\n\n    constructor(props) {\n        super(props)\n\n        this.state = {result: []}\n\n        this.result = []\n        this.requestFinished = false\n\n        this.handleRemove = this.handleRemove.bind(this)\n        this.refreshList = this.refreshList.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshList()\n        setInterval(() => {\n            this.refreshList()\n        }, 5000)\n    }\n\n     refreshList() {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.requestFinished = true\n                this.setState({result: result})\n            });\n    }\n\n\n    handleRemove(row) {\n        if (window.confirm(\"Are you sure?\")) {\n\n            fetch(`${API_URL}/index/remove/${row.name}`, {\n                method: 'DELETE',\n                headers: { 'Content-Type': 'application/json' },            \n            })\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({result: result})\n            });      \n        }\n        return false\n    }\n\n    render() {\n\n        if (this.requestFinished === false) {\n            return(\"\")\n        }\n\n        if (this.state === null) {\n            return (\n                <EmptyIndexList />\n            )\n        }\n\n        if (this.state.result.length === 0) {\n            return (\n                <EmptyIndexList />\n            )\n        }\n\n        return (\n            \n            <div class=\"container mt-5\">\n            <div class=\"row\">\n                <div class=\"col-10 offset-1\">\n                    <h3>List of indexes <a href=\"/gui/index/create\" class=\"btn btn-success btn-sm\"><i class=\"bi bi-plus\"></i> New</a></h3>\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Type</th>\n                                <th>Status</th>\n                                <th>Ignore</th>\n                                <th>Last indexed</th>\n                                <th>&nbsp;</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.result.map(directoryRow => (\n                                <tr>\n                                    <td><i class=\"bi bi-folder2-open\"></i> {directoryRow.name}</td>\n                                    <td>\n                                        <small class=\"badge bg-primary ms-1\">{directoryRow.type}</small>\n                                    </td>\n                                    <td>{directoryRow.status}</td>\n                                    <td>\n                                    {directoryRow.ignorePath.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">{pathRow}</small>\n                                        ))}\n                                    {directoryRow.ignorePhrase.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*{pathRow}*</small>\n                                        ))}                                        \n                                    {directoryRow.ignoreExtension.map(pathRow => (\n                                            <small class=\"badge bg-secondary ms-1\">*.{pathRow}</small>\n                                        ))}\n                                    </td>\n                                    \n                                    <td>\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleDateString()}\n                                        &nbsp;\n                                        {new Date(directoryRow.lastStructureIndexed).toLocaleTimeString()}\n                                    </td>\n\n                                    <td>\n                                        <a data-placement=\"top\" title=\"Edit\" href={`/gui/index/edit/${directoryRow.name}`} class=\"btn btn-light btn-sm me-1\"><i class=\"bi bi-pencil\"></i></a>\n                                        <a data-placement=\"top\" title=\"Remove\" onClick={() => this.handleRemove(directoryRow)} href=\"#\" class=\"btn btn-danger btn-sm me-1\"><i class=\"bi bi-trash\"></i></a>\n                                        <ReindexState indextype={directoryRow.name} />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default IndexInfo","import React from \"react\";\n\nclass Filesystem extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        this.props.handleSetConfiguration('path', ev.target.value)\n    }\n\n\n    render() {\n        return (\n            <div class=\"row mb-3\">\n                <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">Path</label>\n                <div class=\"col-sm-5\">\n                    <input class=\"form-control\" id=\"inputFilesystemPath\" onChange={this.handleFormEdit} value={this.props.formData.configuration.path} />\n                </div>\n                <div class=\"col-sm-4\">\n                    <small class=\"text-muted\">Full path to index eg: /home/user/dir1</small>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Filesystem","import React from \"react\";\n\nclass Webdav extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        let value = ev.target.value;\n        let name = ''\n        switch (ev.target.id) {\n            case \"inputWebDavUrl\":\n                name = 'url'\n                break\n            case \"inputWebDavUsername\":\n                name = 'username'\n                break\n            case \"inputWebDavPassword\":\n                name = 'password'\n                break \n        }\n\n        this.props.handleSetConfiguration(name, value);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">WebDav URL</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputWebDavUrl\" onChange={this.handleFormEdit} value={this.props.formData.configuration.url} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">WebDav username</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputWebDavUsername\" onChange={this.handleFormEdit} value={this.props.formData.configuration.username} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">WebDav password</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputWebDavPassword\" onChange={this.handleFormEdit} value={this.props.formData.configuration.password} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Webdav","import React from \"react\";\n\nclass S3 extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        let value = ev.target.value;\n        let name = ''\n        switch (ev.target.id) {\n            case \"inputS3Endpoint\":\n                name = 'endpoint'\n                break\n            case \"inputS3Region\":\n                name = 'region'\n                break\n            case \"inputS3Bucket\":\n                name = 'bucket'\n                break\n            case \"inputS3Accesskey\":\n                name = 'accesskey'\n                break\n            case \"inputS3Secretkey\":\n                name = 'secretkey'\n                break\n        }\n\n        this.props.handleSetConfiguration(name, value);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 endpoint</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Endpoint\" onChange={this.handleFormEdit} value={this.props.formData.configuration.endpoint} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 region</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Region\" onChange={this.handleFormEdit} value={this.props.formData.configuration.region} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 bucket</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Bucket\" onChange={this.handleFormEdit} value={this.props.formData.configuration.bucket} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 accesskey</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputS3Accesskey\" onChange={this.handleFormEdit} value={this.props.formData.configuration.accesskey} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">S3 secretkey</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputS3Secretkey\" onChange={this.handleFormEdit} value={this.props.formData.configuration.secretkey} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default S3","import React from \"react\";\n\nclass Ftp extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n    }\n\n    handleFormEdit(ev) {\n        let value = ev.target.value;\n        let name = ''\n        switch (ev.target.id) {\n            case \"inputFtpHost\":\n                name = 'host'\n                break\n            case \"inputFtpPort\":\n                name = 'port'\n                break\n            case \"inputFtpUsername\":\n                name = 'username'\n                break\n            case \"inputFtpPassword\":\n                name = 'password'\n                break\n            case \"inputFtpPath\":\n                name = 'path'\n                break\n        }\n\n        this.props.handleSetConfiguration(name, value);\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP host</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputFtpHost\" onChange={this.handleFormEdit} value={this.props.formData.configuration.host} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP port</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"number\" class=\"form-control\" id=\"inputFtpPort\" onChange={this.handleFormEdit} value={this.props.formData.configuration.port} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP username</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputFtpUsername\" onChange={this.handleFormEdit} value={this.props.formData.configuration.username} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP password</label>\n                    <div class=\"col-sm-5\">\n                        <input type=\"password\" class=\"form-control\" id=\"inputFtpPassword\" onChange={this.handleFormEdit} value={this.props.formData.configuration.password} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n                <div class=\"row mb-3\">\n                    <label for=\"inputPath\" class=\"col-sm-3 col-form-label\">FTP path</label>\n                    <div class=\"col-sm-5\">\n                        <input class=\"form-control\" id=\"inputFtpPath\" onChange={this.handleFormEdit} value={this.props.formData.configuration.path} />\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <small class=\"text-muted\"></small>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Ftp","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport Filesystem from './configuration/filesystem';\nimport Webdav from './configuration/webdav';\nimport S3 from './configuration/S3';\nimport Ftp from './configuration/Ftp';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass IndexForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formData: {\n                \"extractMetadata\": true,\n                \"ignoreExtension\": [],\n                \"ignorePath\": [],\n                \"ignorePhrase\": [],\n                \"indexMode\": \"full\",\n                \"intervalUpdateMetadata\": 3600,\n                \"name\": \"\",\n                \"path\": [],\n                \"type\": '',\n                \"configuration\": {}\n            }\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleFormEdit = this.handleFormEdit.bind(this)\n        this.handleSetConfiguration = this.handleSetConfiguration.bind(this)\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.name;\n        if (id !== undefined) {\n            fetch(`${API_URL}/index/get/${id}`)\n                .then(res => res.json())\n                .then((result) => {\n                    // result['oldname'] = result['name']\n                    this.setState({ formData: result })\n                });\n        }\n\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        fetch(`${API_URL}/index/set`, {\n                method: 'POST',\n                body: JSON.stringify(this.state.formData),\n                headers: { 'Content-Type': 'application/json' },\n            })\n            .then(response => {\n                // console.log(response)\n                window.location = \"/gui/index\"\n            })\n    }\n\n    handleSetConfiguration(k, v) {\n        let formData = this.state.formData\n        formData.configuration[k] = v\n        this.setState({ formData: formData })\n    }\n\n    handleFormEdit(event) {\n\n        if (event.type !== \"change\") {\n            return\n        }\n\n        let formData = this.state.formData\n\n        switch (event.target.id) {\n            case \"inputName\":\n                formData.name = event.target.value.replace(/[^a-z0-9\\-]+/gi, \"\")\n                break\n            case \"inputPath\":\n                formData.path = event.target.value.split(\",\")\n                break\n            case \"inputPathIgnore\":\n                formData.ignorePath = event.target.value.split(\",\")\n                break\n            case \"inputPhraseIgnore\":\n                formData.ignorePhrase = event.target.value.split(\",\")\n                break\n            case \"inputExtIgnore\":\n                formData.ignoreExtension = event.target.value.split(\",\")\n                break\n            case \"inputUpdateStructure\":\n                formData.intervalUpdateStructure = event.target.value.replace(/[^0-9]+/gi, \"\")\n                break\n            case \"inputExtractMetadata\":\n                formData.extractMetadata = event.target.checked\n                break\n            case \"indexType\":\n                formData.type = event.target.value\n                break\n            case \"inputIndexConfiguration\":\n                formData.configuration = event.target.value\n                break\n            case \"reindexStrategy\":\n                formData.reindexType = event.target.value\n                if (formData.reindexType == 'ON_DEMAND') {\n                    formData.intervalUpdateStructure = 0\n                } else {\n                    formData.intervalUpdateStructure = 3600\n                }\n                break\n        }\n\n        this.setState({ formData: formData })\n    }\n\n    render() {\n        let id = this.props.match.params.name\n        let formEditing = true\n        if (id === undefined) {\n            formEditing = false\n        }\n        let isReadonly = formEditing ? 'readOnly' : ''\n\n        let configComponent = null\n        if (this.state.formData.type == \"filesystem\") {\n            configComponent = <Filesystem formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        } else if (this.state.formData.type == \"webdav\") {\n            configComponent = <Webdav formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        } else if (this.state.formData.type == \"s3\") {\n            configComponent = <S3 formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        } else if (this.state.formData.type == \"ftp\") {\n            configComponent = <Ftp formData={this.state.formData} handleSetConfiguration={this.handleSetConfiguration} />\n        }\n\n\n\n        return (\n            <div class=\"container mt-5\">\n                <div class=\"row\">\n                    <div class=\"col-10 offset-1\">\n                        <h1>{formEditing ? \"Edit\" : \"Create\"} index</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <div class=\"row mb-3\">\n                                <label for=\"inputName\" class=\"col-sm-3 col-form-label\">Index name</label>\n                                <div class=\"col-sm-5\">\n                                    <input readOnly={isReadonly} required value={this.state.formData.name} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputName\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    {/* <small class=\"text-muted\">Input desription</small> */}\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputIndexType\" class=\"col-sm-3 col-form-label\">Index type</label>\n                                <div class=\"col-sm-5\">\n                                    {/* <input value={this.state.formData.path.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPath\" /> */}\n                                    <select required onChange={this.handleFormEdit} class=\"form-select\" aria-label=\"Index type\" id=\"indexType\">\n                                        <option ></option>\n                                        <option selected={this.state.formData.type === 'filesystem' ? 'selected' : ''} value=\"filesystem\">Filesystem</option>\n                                        <option selected={this.state.formData.type === 's3' ? 'selected' : ''} value=\"s3\">S3</option>\n                                        <option selected={this.state.formData.type === 'webdav' ? 'selected' : ''} value=\"webdav\">WebDAV</option>\n                                        <option selected={this.state.formData.type === 'ftp' ? 'selected' : ''} value=\"ftp\">FTP</option>\n                                    </select>\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Storage backend for access to your files.</small>\n                                </div>\n                            </div>\n\n                            {configComponent}\n\n                            <h4>Filter settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPathIgnore\" class=\"col-sm-3 col-form-label\">Ignore path</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePath.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPathIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore paths from indexing separated by coma <br />eg. (/home/user/dir1/unwanted-path,/home/user/dir2/some/unwanted)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPhraseIgnore\" class=\"col-sm-3 col-form-label\">Ignore phrase</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignorePhrase.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputPhraseIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file/directory paths with phrase separated by coma. You can use * to match more files/directories <br />eg. (.git,vendor,attr*)</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtIgnore\" class=\"col-sm-3 col-form-label\">Ignore extensions</label>\n                                <div class=\"col-sm-5\">\n                                    <input value={this.state.formData.ignoreExtension.join(\",\")} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputExtIgnore\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Ignore file extensions separated by coma <br />eg. (jpg,mp4,tmp)</small>\n                                </div>\n                            </div>\n\n\n                            <h4>Reindex settings</h4>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputIndexType\" class=\"col-sm-3 col-form-label\">Reindex strategy</label>\n                                <div class=\"col-sm-5\">\n                                    <select required onChange={this.handleFormEdit} class=\"form-select\" aria-label=\"Reindex strategy\" id=\"reindexStrategy\">\n                                        <option selected={this.state.formData.type === 'RECURRING' ? 'selected' : ''} value=\"RECURRING\">Recurring</option>\n                                        <option selected={this.state.formData.type === 'ON_DEMAND' ? 'selected' : ''} value=\"ON_DEMAND\">On demand</option>\n                                    </select>\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Type of strategy for refresh your index.</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputUpdateStructure\" class=\"col-sm-3 col-form-label\">File structure interval</label>\n                                <div class=\"col-sm-5\">\n                                    <input readOnly={this.state.formData.reindexType == 'ON_DEMAND' ? true : false} value={this.state.formData.intervalUpdateStructure} onChange={this.handleFormEdit} type=\"text\" class=\"form-control\" id=\"inputUpdateStructure\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Refresh directory structure interval in seconds.</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row mb-3\">\n                                <label for=\"inputExtractMetadata\" class=\"col-sm-3 col-form-label\">Extract metadata from files</label>\n                                <div class=\"col-sm-5\">\n                                    <input onChange={this.handleFormEdit} checked={this.state.formData.extractMetadata} type=\"checkbox\" class=\"form-check-input\" id=\"inputExtractMetadata\" />\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <small class=\"text-muted\">Enable this option when Filehunter should extract metadata/content from files and make it searchable</small>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-3 offset-6\">\n                                    <a href=\"/gui/index\" class=\"btn btn-link\">Cancel</a>\n                                    <button type=\"submit\" class=\"btn btn-primary float-right\" onClick={this.handleSubmit}>Save</button>\n                                </div>\n                            </div>\n\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(IndexForm)","import React from \"react\";\n\nclass EmptySearchResult extends React.Component {\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"row\" key=\"empty-results\">\n                    <div class=\"col\">\n                        <div class=\"alert alert-info col-md-12 col-md-offset-12\" align=\"center\">\n                            Nothing to listing\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EmptySearchResult","import React from 'react';\n\nclass ItemBreadcrumb extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.handleOpenDirectory = this.handleOpenDirectory.bind(this)\n    }\n\n    handleOpenDirectory(e) {\n        e.preventDefault();\n\n        this.props.handleBrowse(e.target.attributes.path.value, this.props.index)\n        return false\n    }\n\n    render() {\n\n        let tmp = ['']\n        if (this.props.path != '/') {\n            tmp = this.props.path.split('/')\n        }\n        tmp = tmp.splice(1, tmp.length -2);\n\n        let pathElems = []\n        let fullPath = ''\n        let label = ''\n        for (let tmpIndex in tmp) {\n            if (tmp[tmpIndex] == '') {\n\n            } else {\n                fullPath += '/' + tmp[tmpIndex]\n                label = tmp[tmpIndex]\n            }\n\n\n            pathElems.push({ 'path': fullPath, 'label': label })\n        }\n\n        return (\n            \n            <span class=\"\"><br />\n            {pathElems.map(item => \n                        <small><a class=\"link-success nounderline\" href=\"#\" path={item.path} onClick={this.handleOpenDirectory.bind(this)}>/{item.label}</a></small>\n                    )}\n            \n            {/* <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    {pathElems.map(item => \n                    <li class=\"breadcrumb-item\">\n                        <a href=\"#\" path={item.path} onClick={this.handleOpenDirectory.bind(this)}>{item.label}</a>\n                    </li>\n                    )}\n                </ol>\n            </nav> */}\n            </span>\n        )\n    }\n}\n\nexport default ItemBreadcrumb","import React from 'react';\nimport ItemBreadcrumb from './ItemBreadcrumb';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass ItemFileRow extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.handleItemClick = this.handleItemClick.bind(this)\n  }\n\n  humanFileSize(bytes, si = true, dp = 2) {\n    const thresh = si ? 1000 : 1024;\n\n    if (Math.abs(bytes) < thresh) {\n      return bytes + ' B';\n    }\n\n    const units = si\n      ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    const r = 10 ** dp;\n\n    do {\n      bytes /= thresh;\n      ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n\n    return bytes.toFixed(dp) + ' ' + units[u];\n  }\n\n  handleItemClick(ev) {\n    ev.preventDefault()\n\n    if (this.props.params.type == 'f') {\n      window.open(`${API_URL}/download/file?path=${encodeURIComponent(this.props.params.path)}&index=${this.props.params.index}`)\n      // window.open(`${API_URL}/download/file?uid=${this.props.params.uid}`)\n    } else {\n      this.props.handleBrowse(this.props.params.path, this.props.params.index)\n    }\n  }\n\n  render() {\n    let iconclass = \"bi-file-earmark\"\n    if (this.props.params.type === 'd') {\n      iconclass = \"bi-folder2\"\n    }\n\n    let itemBreadcrumb = null\n    if (this.props.searchResult === true) {\n      itemBreadcrumb = <div><ItemBreadcrumb index={this.props.params.index} path={this.props.params.path} handleBrowse={this.props.handleBrowse} /></div>\n    }\n\n    let fileSize = this.humanFileSize(this.props.params.size)\n    if (this.props.params.type === 'd') {\n      fileSize = ''\n    }\n    let linkComponent = <a href=\"#\" class=\"ms-2 nounderline\" onClick={this.handleItemClick}>{this.props.params.name}</a>\n    if (this.props.params.type === 'f' && this.props.params.indexstatus.status != 'ONLINE') {\n      linkComponent = <span data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" title=\"Backend is currenty unavailable\">{this.props.params.name}</span>\n    }\n\n    return (\n\n      <div class=\"list-group-item list-group-item-action\" data-bs-toggle=\"tooltip\" title={this.props.params.name}>\n        <a href=\"#\" onClick={this.handleItemClick} class=\"nounderline\" aria-current=\"true\" >\n          <div class=\"d-flex w-100 justify-content-between\">\n            <h6 class=\"mb-1 text-truncate text-primary fw-normal\"><i class={`bi ${iconclass}`} style={{ fontSize: '1.3rem', color: '#555' }}></i> {this.props.params.name}</h6>\n            <small class=\"text-success\">{this.props.params.index}</small>\n          </div>\n        </a>\n\n        <div class=\"float-end\">\n          <small class=\"text-end\">{fileSize} {this.props.params.lastModified}</small>\n        </div>\n        {itemBreadcrumb}\n      </div>\n\n      // <div class=\"row mb-12 p-2\" key={this.props.params.uuid}>\n\n      //   <div class=\"col-1\">\n      //     <small class=\"\" style={{fontSize: '0.7em', border: '1px solid green', padding: '2px', borderRadius: '5px', marginLeft: '5px', marginRight: '3px', color: 'green'}} >{this.props.params.index}</small>\n      //   </div>\n\n      //   <div class=\"col-7 fs-6 \">\n      //     <i class={`bi ${iconclass}`} style={{fontSize: '1.3rem', color: '#555'}}></i> \n      //     {linkComponent}\n      //     {itemBreadcrumb}\n      //   </div>\n      //   <div class=\"col-1 text-end\">\n      //     {fileSize}\n      //   </div> \n      //   <div class=\"col-2\">\n      //     <small>{this.props.params.lastModified}</small>\n      //   </div>              \n\n      // </div>\n    )\n  }\n\n}\n\nexport default ItemFileRow","import React from 'react'\nconst API_URL = process.env.REACT_APP_API_URL\n\nclass BrowseBreadcrumb extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n\n        this.handleClick = this.handleClick.bind(this)\n\n    }\n\n    handleClick(item) {\n        // e.preventDefault();\n\n        let pathToShow = item.target.attributes.path.value\n        if (pathToShow == '') {\n            pathToShow = '/'\n        }\n\n        this.props.handleBrowse(pathToShow, this.props.index)\n        return false\n    }\n\n    render() {\n\n        if (this.props.index === '-') {\n            return ''\n        }\n\n        let tmp = ['']\n        if (this.props.path != '/') {\n            tmp = this.props.path.split('/')\n        }\n        \n\n        let pathElems = []\n        let fullPath = ''\n        let label = ''\n        for (let tmpIndex in tmp) {\n            if (tmp[tmpIndex] == '') {\n                fullPath = ''\n                label = <i class='fs-5 bi bi-house' path='/'></i>\n            } else {\n                fullPath += '/' + tmp[tmpIndex]\n                label = tmp[tmpIndex]\n            }\n            \n\n            pathElems.push({'path': fullPath, 'label': label})\n        }\n\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    {pathElems.map(item => <li class=\"fs-5 breadcrumb-item \"><a class=\"nounderline\" href=\"#\" path={item.path} onClick={this.handleClick.bind(this)}>{item.label}</a></li> )} \n                </ol>\n            </nav>\n        )\n    }\n\n}\n\nexport default BrowseBreadcrumb","import React from \"react\";\n\nclass IndexList extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.handleBrowse = this.handleBrowse.bind(this)\n\n        // this.browseIndex = this.handleFormEdit.bind(this)\n    }\n\n    handleBrowse(path, index) {\n        this.props.handleBrowse(path, index)\n    }\n\n    render() {\n       let offlineBadge = <span class=\"badge rounded-pill bg-secondary\">Offline</span>\n\n        return (\n            <>\n                <h6 class=\"text-center\">Indexes</h6>\n                <div class=\"list-group list-group-flush\">\n                {this.props.availableIndexes.map(item => \n                            <a class=\"list-group-item list-group-item-action\" href=\"#\" path=\"/\" index={item.name} onClick={() => { this.handleBrowse('/', item.name) }}>\n                            <div class=\"d-flex w-100 justify-content-between\">\n                                <h6 class=\"mb-1\"><i class=\"bi bi-folder2\"></i> <span class=\"link-primary\">{item.name}</span></h6>\n                                <span class=\"badge bg-secondary rounded-pill\">{item.status !== 'ONLINE' ? 'offline' : ''}</span>\n                                </div>\n                            </a>\n                            \n                    )}\n                </div>\n     \n            </>\n        )\n\n    }\n}\n\nexport default IndexList","import React from 'react';\n\nclass StartupPlaceholder extends React.Component {\n\n    render() {\n        return (\n            <div class=\"px-4 py-5 my-5 text-center\">\n                {/* <img class=\"d-block mx-auto mb-4\" src=\"/docs/5.0/assets/brand/bootstrap-logo.svg\" alt=\"\" width=\"72\" height=\"57\" /> */}\n                \n                    <h1 class=\"display-6 fw-bold\"><span class=\"badge bg-primary\">FH</span> File Hunter</h1>\n                    <div class=\"col-lg-6 mx-auto\">\n                        <p class=\"lead mb-4\">\n                        Simple, fast, open source file search engine<br /><br />\n                        </p>\n\n                        \n                        <div class=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        \n                            <a href=\"/gui/index/create\" class=\"btn btn-primary btn-lg px-4 gap-3\"><i class=\"bi bi-plus\"></i> Create new index</a>\n                        </div>\n                        <p class=\"text-muted fw-lighter\">Currently you don't have any indexes, add new one to search the files</p>\n                        \n                    </div>\n       \n            </div>\n                )\n            }\n        }\n        \nexport default StartupPlaceholder","import React from 'react';\nimport EmptySearchResult from './EmptySearchResult.js';\nimport ItemFileRow from './ItemFileRow';\nimport BrowseBreadcrumb from './BrowseBreadcrumb.js';\nimport IndexList from './IndexList.js';\nimport SearchAdvanced from './SearchAdvanced.js';\nimport StartupPlaceholder from './StartupPlaceholder.js';\nconst API_URL = process.env.REACT_APP_API_URL\n\n\nclass Browser extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            searchResultRows: [],\n            currentIndex: '-',\n            currentPath: '/',\n            availableIndexes: [],\n            currentBrowseList: []\n        };\n        // this.refreshIndexList = null\n\n        this.handleBrowse = this.handleBrowse.bind(this)\n        this.showItems = this.showItems.bind(this)\n        this.showSearchResult = this.showSearchResult.bind(this)\n        this.refreshIndexList = this.refreshIndexList.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshIndexList(true)\n\n        this.props.setItemRefresh(this.showSearchResult)\n        setInterval(() => {\n            this.refreshIndexList()\n        }, 30000)\n    }\n\n    refreshIndexList(openFirstResult = false) {\n        fetch(`${API_URL}/index/list`)\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({ ...this.state, availableIndexes: result });\n                if (openFirstResult && result.length > 0) {\n                    this.handleBrowse('/', result[0].name)\n                }\n            });\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    presentItems(result, showItemsPath) {\n        let sr = []\n        let currentIndex = {}\n        this.state.availableIndexes.forEach(elem => {\n            currentIndex[elem['name']] = elem\n        })\n\n        result.map((item) => {\n            item['indexstatus'] = currentIndex[item['index']]\n            sr.push(\n                <ItemFileRow\n                    params={item}\n                    handleBrowse={this.handleBrowse}\n                    searchResult={showItemsPath}\n                />\n            )\n        })\n\n        if (sr.length === 0) {\n            sr.push(<EmptySearchResult />)\n        }\n        window.scrollTo(0, 0)\n        this.setState({ ...this.state, currentBrowseList: sr })\n    }\n\n    showSearchResult(result) {\n\n        this.presentItems(result, true)\n        this.setState({ ...this.state, currentIndex: '-', currentPath: '/' })\n    }\n\n    showItems(result) {\n\n        this.presentItems(result, false)\n        this.props.setNavbarInputClear()\n    }\n\n    handleBrowse(path, index) {\n\n        let queryBrowse = `${API_URL}/browse?path=${encodeURIComponent(path)}&index=${encodeURIComponent(index)}`\n\n        this.setState({ ...this.state, currentIndex: index, currentPath: path })\n\n        fetch(queryBrowse)\n            .then(res => res.json())\n            .then((result) => {\n                this.currentItems = result\n\n                this.showItems(result)\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n\n        if (this.state.availableIndexes.length == 0) {\n            return (<StartupPlaceholder />)\n        }\n\n\n        return (\n            <div class=\"container-fluid mt-5\">\n\n                <div class=\"row\">\n\n                    <div class=\"col-2 d-none d-lg-block\">\n                        <IndexList handleBrowse={this.handleBrowse} availableIndexes={this.state.availableIndexes} />\n                    </div>\n                    <div class=\"col-lg-10 col-md-12\">\n\n                        <div class=\"row align-middle\">\n                            <div class=\"col-auto me-auto\">\n                                <BrowseBreadcrumb index={this.state.currentIndex} path={this.state.currentPath} handleBrowse={this.handleBrowse} />\n                            </div>\n                            <div class=\"col-auto\">\n                                <a href=\"#\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#indexListDrawer\" class=\"btn btn-sm btn-primary d-inline d-lg-none\"><i class=\"bi bi-folder2\"></i></a>\n                            </div>\n\n                        </div>\n\n                        <div class=\"list-group list-group-flush\">\n                        {this.state.currentBrowseList}\n                        </div>\n                    </div>\n\n\n                </div>\n\n                <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"indexListDrawer\" aria-labelledby=\"Index list\">\n                    <div class=\"offcanvas-header\">\n                        <h5 id=\"offcanvasRightLabel\"></h5>\n                        <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"offcanvas-body\">\n                        <IndexList handleBrowse={this.handleBrowse} availableIndexes={this.state.availableIndexes} />\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Browser","import './App.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport Navbar from './Navbar.js';\nimport IndexInfo from './IndexInfo';\nimport IndexForm from './IndexForm';\nimport Browser from './Browser';\n\nclass App extends React.Component {\n\n\n\n  constructor(props) {\n    super(props)\n    // const history = useHistory()/\n    this.handleItemsRefreshFromBrowser = this.handleItemsRefreshFromBrowser.bind(this)\n    this.handleItemRefreshFromNavbar = this.handleItemRefreshFromNavbar.bind(this)\n\n    this.hadnleClearNavbarInputQuery = this.hadnleClearNavbarInputQuery.bind(this)\n    this.callbackNavbarClearQuery = this.callbackNavbarClearQuery.bind(this)\n  }\n\n  handleItemRefreshFromNavbar(items) {\n    this.handleItemsRefreshFromBrowser(items)\n  }\n\n  handleItemsRefreshFromBrowser() { }\n\n\n  hadnleClearNavbarInputQuery() {\n    this.callbackNavbarClearQuery()\n  }\n\n  callbackNavbarClearQuery() { }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <div>\n            <header>\n              <Navbar setCallbackClearInputQuery={fcn => this.callbackNavbarClearQuery = fcn} handleItemSearch={this.handleItemRefreshFromNavbar} />\n            </header>\n            <main class=\"flex-shrink-2\">\n\n              <Route exact path=\"/\">\n                <Redirect to=\"/gui/\" />\n              </Route>\n              <Route exact path=\"/gui/\">\n                <Browser setNavbarInputClear={this.hadnleClearNavbarInputQuery} setItemRefresh={fcn => this.handleItemsRefreshFromBrowser = fcn} />\n              </Route>\n              <Route exact path=\"/gui/index\">\n                <IndexInfo />\n              </Route>\n              <Route path=\"/gui/index/edit/:name\">\n                <IndexForm />\n              </Route>\n              <Route path=\"/gui/index/create\">\n                <IndexForm />\n              </Route>\n            </main>\n          </div>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}